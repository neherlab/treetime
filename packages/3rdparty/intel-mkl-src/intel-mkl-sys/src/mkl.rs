/* automatically generated by rust-bindgen */

pub const VML_LA: u32 = 1;
pub const VML_HA: u32 = 2;
pub const VML_EP: u32 = 3;
pub const VML_DEFAULT_PRECISION: u32 = 0;
pub const VML_FLOAT_CONSISTENT: u32 = 16;
pub const VML_DOUBLE_CONSISTENT: u32 = 32;
pub const VML_RESTORE: u32 = 48;
pub const VML_ERRMODE_IGNORE: u32 = 256;
pub const VML_ERRMODE_ERRNO: u32 = 512;
pub const VML_ERRMODE_STDERR: u32 = 1024;
pub const VML_ERRMODE_EXCEPT: u32 = 2048;
pub const VML_ERRMODE_CALLBACK: u32 = 4096;
pub const VML_ERRMODE_NOERR: u32 = 8192;
pub const VML_ERRMODE_DEFAULT: u32 = 6656;
pub const VML_NUM_THREADS_OMP_AUTO: u32 = 0;
pub const VML_NUM_THREADS_OMP_FIXED: u32 = 65536;
pub const VML_FTZDAZ_ON: u32 = 2621440;
pub const VML_FTZDAZ_OFF: u32 = 1310720;
pub const VML_TRAP_INVALID: u32 = 16777216;
pub const VML_TRAP_DIVBYZERO: u32 = 33554432;
pub const VML_TRAP_OVERFLOW: u32 = 67108864;
pub const VML_TRAP_UNDERFLOW: u32 = 134217728;
pub const VML_ACCURACY_MASK: u32 = 15;
pub const VML_FPUMODE_MASK: u32 = 240;
pub const VML_ERRMODE_MASK: u32 = 65280;
pub const VML_ERRMODE_STDHANDLER_MASK: u32 = 12032;
pub const VML_ERRMODE_CALLBACK_MASK: u32 = 4096;
pub const VML_NUM_THREADS_OMP_MASK: u32 = 196608;
pub const VML_FTZDAZ_MASK: u32 = 3932160;
pub const VML_TRAP_EXCEPTIONS_MASK: u32 = 251658240;
pub const VML_STATUS_OK: u32 = 0;
pub const VML_STATUS_BADSIZE: i32 = -1;
pub const VML_STATUS_BADMEM: i32 = -2;
pub const VML_STATUS_ERRDOM: u32 = 1;
pub const VML_STATUS_SING: u32 = 2;
pub const VML_STATUS_OVERFLOW: u32 = 3;
pub const VML_STATUS_UNDERFLOW: u32 = 4;
pub const VML_STATUS_ACCURACYWARNING: u32 = 1000;
pub const MKL_DOMAIN_ALL: u32 = 0;
pub const MKL_DOMAIN_BLAS: u32 = 1;
pub const MKL_DOMAIN_FFT: u32 = 2;
pub const MKL_DOMAIN_VML: u32 = 3;
pub const MKL_DOMAIN_PARDISO: u32 = 4;
pub const MKL_CBWR_BRANCH: u32 = 1;
pub const MKL_CBWR_ALL: i32 = -1;
pub const MKL_CBWR_STRICT: u32 = 65536;
pub const MKL_CBWR_OFF: u32 = 0;
pub const MKL_CBWR_BRANCH_OFF: u32 = 1;
pub const MKL_CBWR_AUTO: u32 = 2;
pub const MKL_CBWR_COMPATIBLE: u32 = 3;
pub const MKL_CBWR_SSE2: u32 = 4;
pub const MKL_CBWR_SSSE3: u32 = 6;
pub const MKL_CBWR_SSE4_1: u32 = 7;
pub const MKL_CBWR_SSE4_2: u32 = 8;
pub const MKL_CBWR_AVX: u32 = 9;
pub const MKL_CBWR_AVX2: u32 = 10;
pub const MKL_CBWR_AVX512_MIC: u32 = 11;
pub const MKL_CBWR_AVX512: u32 = 12;
pub const MKL_CBWR_AVX512_MIC_E1: u32 = 13;
pub const MKL_CBWR_AVX512_E1: u32 = 14;
pub const MKL_CBWR_SUCCESS: u32 = 0;
pub const MKL_CBWR_ERR_INVALID_SETTINGS: i32 = -1;
pub const MKL_CBWR_ERR_INVALID_INPUT: i32 = -2;
pub const MKL_CBWR_ERR_UNSUPPORTED_BRANCH: i32 = -3;
pub const MKL_CBWR_ERR_UNKNOWN_BRANCH: i32 = -4;
pub const MKL_CBWR_ERR_MODE_CHANGE_FAILURE: i32 = -8;
pub const MKL_CBWR_SSE3: u32 = 5;
pub const VSL_STATUS_OK: u32 = 0;
pub const VSL_ERROR_OK: u32 = 0;
pub const VSL_ERROR_FEATURE_NOT_IMPLEMENTED: i32 = -1;
pub const VSL_ERROR_UNKNOWN: i32 = -2;
pub const VSL_ERROR_BADARGS: i32 = -3;
pub const VSL_ERROR_MEM_FAILURE: i32 = -4;
pub const VSL_ERROR_NULL_PTR: i32 = -5;
pub const VSL_ERROR_CPU_NOT_SUPPORTED: i32 = -6;
pub const VSL_RNG_ERROR_INVALID_BRNG_INDEX: i32 = -1000;
pub const VSL_RNG_ERROR_LEAPFROG_UNSUPPORTED: i32 = -1002;
pub const VSL_RNG_ERROR_SKIPAHEAD_UNSUPPORTED: i32 = -1003;
pub const VSL_RNG_ERROR_BRNGS_INCOMPATIBLE: i32 = -1005;
pub const VSL_RNG_ERROR_BAD_STREAM: i32 = -1006;
pub const VSL_RNG_ERROR_BRNG_TABLE_FULL: i32 = -1007;
pub const VSL_RNG_ERROR_BAD_STREAM_STATE_SIZE: i32 = -1008;
pub const VSL_RNG_ERROR_BAD_WORD_SIZE: i32 = -1009;
pub const VSL_RNG_ERROR_BAD_NSEEDS: i32 = -1010;
pub const VSL_RNG_ERROR_BAD_NBITS: i32 = -1011;
pub const VSL_RNG_ERROR_QRNG_PERIOD_ELAPSED: i32 = -1012;
pub const VSL_RNG_ERROR_LEAPFROG_NSTREAMS_TOO_BIG: i32 = -1013;
pub const VSL_RNG_ERROR_BRNG_NOT_SUPPORTED: i32 = -1014;
pub const VSL_RNG_ERROR_BAD_UPDATE: i32 = -1120;
pub const VSL_RNG_ERROR_NO_NUMBERS: i32 = -1121;
pub const VSL_RNG_ERROR_INVALID_ABSTRACT_STREAM: i32 = -1122;
pub const VSL_RNG_ERROR_NONDETERM_NOT_SUPPORTED: i32 = -1130;
pub const VSL_RNG_ERROR_NONDETERM_NRETRIES_EXCEEDED: i32 = -1131;
pub const VSL_RNG_ERROR_ARS5_NOT_SUPPORTED: i32 = -1140;
pub const VSL_DISTR_MULTINOMIAL_BAD_PROBABILITY_ARRAY: i32 = -1150;
pub const VSL_RNG_ERROR_FILE_CLOSE: i32 = -1100;
pub const VSL_RNG_ERROR_FILE_OPEN: i32 = -1101;
pub const VSL_RNG_ERROR_FILE_WRITE: i32 = -1102;
pub const VSL_RNG_ERROR_FILE_READ: i32 = -1103;
pub const VSL_RNG_ERROR_BAD_FILE_FORMAT: i32 = -1110;
pub const VSL_RNG_ERROR_UNSUPPORTED_FILE_VER: i32 = -1111;
pub const VSL_RNG_ERROR_BAD_MEM_FORMAT: i32 = -1200;
pub const VSL_CC_ERROR_NOT_IMPLEMENTED: i32 = -2000;
pub const VSL_CC_ERROR_ALLOCATION_FAILURE: i32 = -2001;
pub const VSL_CC_ERROR_BAD_DESCRIPTOR: i32 = -2200;
pub const VSL_CC_ERROR_SERVICE_FAILURE: i32 = -2210;
pub const VSL_CC_ERROR_EDIT_FAILURE: i32 = -2211;
pub const VSL_CC_ERROR_EDIT_PROHIBITED: i32 = -2212;
pub const VSL_CC_ERROR_COMMIT_FAILURE: i32 = -2220;
pub const VSL_CC_ERROR_COPY_FAILURE: i32 = -2230;
pub const VSL_CC_ERROR_DELETE_FAILURE: i32 = -2240;
pub const VSL_CC_ERROR_BAD_ARGUMENT: i32 = -2300;
pub const VSL_CC_ERROR_DIMS: i32 = -2301;
pub const VSL_CC_ERROR_START: i32 = -2302;
pub const VSL_CC_ERROR_DECIMATION: i32 = -2303;
pub const VSL_CC_ERROR_XSHAPE: i32 = -2311;
pub const VSL_CC_ERROR_YSHAPE: i32 = -2312;
pub const VSL_CC_ERROR_ZSHAPE: i32 = -2313;
pub const VSL_CC_ERROR_XSTRIDE: i32 = -2321;
pub const VSL_CC_ERROR_YSTRIDE: i32 = -2322;
pub const VSL_CC_ERROR_ZSTRIDE: i32 = -2323;
pub const VSL_CC_ERROR_X: i32 = -2331;
pub const VSL_CC_ERROR_Y: i32 = -2332;
pub const VSL_CC_ERROR_Z: i32 = -2333;
pub const VSL_CC_ERROR_JOB: i32 = -2100;
pub const VSL_CC_ERROR_KIND: i32 = -2110;
pub const VSL_CC_ERROR_MODE: i32 = -2120;
pub const VSL_CC_ERROR_TYPE: i32 = -2130;
pub const VSL_CC_ERROR_PRECISION: i32 = -2400;
pub const VSL_CC_ERROR_EXTERNAL_PRECISION: i32 = -2141;
pub const VSL_CC_ERROR_INTERNAL_PRECISION: i32 = -2142;
pub const VSL_CC_ERROR_METHOD: i32 = -2400;
pub const VSL_CC_ERROR_OTHER: i32 = -2800;
pub const VSL_SS_NOT_FULL_RANK_MATRIX: u32 = 4028;
pub const VSL_SS_SEMIDEFINITE_COR: u32 = 4029;
pub const VSL_SS_ERROR_ALLOCATION_FAILURE: i32 = -4000;
pub const VSL_SS_ERROR_BAD_DIMEN: i32 = -4001;
pub const VSL_SS_ERROR_BAD_OBSERV_N: i32 = -4002;
pub const VSL_SS_ERROR_STORAGE_NOT_SUPPORTED: i32 = -4003;
pub const VSL_SS_ERROR_BAD_INDC_ADDR: i32 = -4004;
pub const VSL_SS_ERROR_BAD_WEIGHTS: i32 = -4005;
pub const VSL_SS_ERROR_BAD_MEAN_ADDR: i32 = -4006;
pub const VSL_SS_ERROR_BAD_2R_MOM_ADDR: i32 = -4007;
pub const VSL_SS_ERROR_BAD_3R_MOM_ADDR: i32 = -4008;
pub const VSL_SS_ERROR_BAD_4R_MOM_ADDR: i32 = -4009;
pub const VSL_SS_ERROR_BAD_2C_MOM_ADDR: i32 = -4010;
pub const VSL_SS_ERROR_BAD_3C_MOM_ADDR: i32 = -4011;
pub const VSL_SS_ERROR_BAD_4C_MOM_ADDR: i32 = -4012;
pub const VSL_SS_ERROR_BAD_KURTOSIS_ADDR: i32 = -4013;
pub const VSL_SS_ERROR_BAD_SKEWNESS_ADDR: i32 = -4014;
pub const VSL_SS_ERROR_BAD_MIN_ADDR: i32 = -4015;
pub const VSL_SS_ERROR_BAD_MAX_ADDR: i32 = -4016;
pub const VSL_SS_ERROR_BAD_VARIATION_ADDR: i32 = -4017;
pub const VSL_SS_ERROR_BAD_COV_ADDR: i32 = -4018;
pub const VSL_SS_ERROR_BAD_COR_ADDR: i32 = -4019;
pub const VSL_SS_ERROR_BAD_ACCUM_WEIGHT_ADDR: i32 = -4020;
pub const VSL_SS_ERROR_BAD_QUANT_ORDER_ADDR: i32 = -4021;
pub const VSL_SS_ERROR_BAD_QUANT_ORDER: i32 = -4022;
pub const VSL_SS_ERROR_BAD_QUANT_ADDR: i32 = -4023;
pub const VSL_SS_ERROR_BAD_ORDER_STATS_ADDR: i32 = -4024;
pub const VSL_SS_ERROR_MOMORDER_NOT_SUPPORTED: i32 = -4025;
pub const VSL_SS_ERROR_ALL_OBSERVS_OUTLIERS: i32 = -4026;
pub const VSL_SS_ERROR_BAD_ROBUST_COV_ADDR: i32 = -4027;
pub const VSL_SS_ERROR_BAD_ROBUST_MEAN_ADDR: i32 = -4028;
pub const VSL_SS_ERROR_METHOD_NOT_SUPPORTED: i32 = -4029;
pub const VSL_SS_ERROR_BAD_GROUP_INDC_ADDR: i32 = -4030;
pub const VSL_SS_ERROR_NULL_TASK_DESCRIPTOR: i32 = -4031;
pub const VSL_SS_ERROR_BAD_OBSERV_ADDR: i32 = -4032;
pub const VSL_SS_ERROR_SINGULAR_COV: i32 = -4033;
pub const VSL_SS_ERROR_BAD_POOLED_COV_ADDR: i32 = -4034;
pub const VSL_SS_ERROR_BAD_POOLED_MEAN_ADDR: i32 = -4035;
pub const VSL_SS_ERROR_BAD_GROUP_COV_ADDR: i32 = -4036;
pub const VSL_SS_ERROR_BAD_GROUP_MEAN_ADDR: i32 = -4037;
pub const VSL_SS_ERROR_BAD_GROUP_INDC: i32 = -4038;
pub const VSL_SS_ERROR_BAD_OUTLIERS_PARAMS_ADDR: i32 = -4039;
pub const VSL_SS_ERROR_BAD_OUTLIERS_PARAMS_N_ADDR: i32 = -4040;
pub const VSL_SS_ERROR_BAD_OUTLIERS_WEIGHTS_ADDR: i32 = -4041;
pub const VSL_SS_ERROR_BAD_ROBUST_COV_PARAMS_ADDR: i32 = -4042;
pub const VSL_SS_ERROR_BAD_ROBUST_COV_PARAMS_N_ADDR: i32 = -4043;
pub const VSL_SS_ERROR_BAD_STORAGE_ADDR: i32 = -4044;
pub const VSL_SS_ERROR_BAD_PARTIAL_COV_IDX_ADDR: i32 = -4045;
pub const VSL_SS_ERROR_BAD_PARTIAL_COV_ADDR: i32 = -4046;
pub const VSL_SS_ERROR_BAD_PARTIAL_COR_ADDR: i32 = -4047;
pub const VSL_SS_ERROR_BAD_MI_PARAMS_ADDR: i32 = -4048;
pub const VSL_SS_ERROR_BAD_MI_PARAMS_N_ADDR: i32 = -4049;
pub const VSL_SS_ERROR_BAD_MI_BAD_PARAMS_N: i32 = -4050;
pub const VSL_SS_ERROR_BAD_MI_PARAMS: i32 = -4051;
pub const VSL_SS_ERROR_BAD_MI_INIT_ESTIMATES_N_ADDR: i32 = -4052;
pub const VSL_SS_ERROR_BAD_MI_INIT_ESTIMATES_ADDR: i32 = -4053;
pub const VSL_SS_ERROR_BAD_MI_SIMUL_VALS_ADDR: i32 = -4054;
pub const VSL_SS_ERROR_BAD_MI_SIMUL_VALS_N_ADDR: i32 = -4055;
pub const VSL_SS_ERROR_BAD_MI_ESTIMATES_N_ADDR: i32 = -4056;
pub const VSL_SS_ERROR_BAD_MI_ESTIMATES_ADDR: i32 = -4057;
pub const VSL_SS_ERROR_BAD_MI_SIMUL_VALS_N: i32 = -4058;
pub const VSL_SS_ERROR_BAD_MI_ESTIMATES_N: i32 = -4059;
pub const VSL_SS_ERROR_BAD_MI_OUTPUT_PARAMS: i32 = -4060;
pub const VSL_SS_ERROR_BAD_MI_PRIOR_N_ADDR: i32 = -4061;
pub const VSL_SS_ERROR_BAD_MI_PRIOR_ADDR: i32 = -4062;
pub const VSL_SS_ERROR_BAD_MI_MISSING_VALS_N: i32 = -4063;
pub const VSL_SS_ERROR_BAD_STREAM_QUANT_PARAMS_N_ADDR: i32 = -4064;
pub const VSL_SS_ERROR_BAD_STREAM_QUANT_PARAMS_ADDR: i32 = -4065;
pub const VSL_SS_ERROR_BAD_STREAM_QUANT_PARAMS_N: i32 = -4066;
pub const VSL_SS_ERROR_BAD_STREAM_QUANT_PARAMS: i32 = -4067;
pub const VSL_SS_ERROR_BAD_STREAM_QUANT_ORDER_ADDR: i32 = -4068;
pub const VSL_SS_ERROR_BAD_STREAM_QUANT_ORDER: i32 = -4069;
pub const VSL_SS_ERROR_BAD_STREAM_QUANT_ADDR: i32 = -4070;
pub const VSL_SS_ERROR_BAD_PARAMTR_COR_ADDR: i32 = -4071;
pub const VSL_SS_ERROR_BAD_COR: i32 = -4072;
pub const VSL_SS_ERROR_BAD_PARTIAL_COV_IDX: i32 = -4073;
pub const VSL_SS_ERROR_BAD_SUM_ADDR: i32 = -4074;
pub const VSL_SS_ERROR_BAD_2R_SUM_ADDR: i32 = -4075;
pub const VSL_SS_ERROR_BAD_3R_SUM_ADDR: i32 = -4076;
pub const VSL_SS_ERROR_BAD_4R_SUM_ADDR: i32 = -4077;
pub const VSL_SS_ERROR_BAD_2C_SUM_ADDR: i32 = -4078;
pub const VSL_SS_ERROR_BAD_3C_SUM_ADDR: i32 = -4079;
pub const VSL_SS_ERROR_BAD_4C_SUM_ADDR: i32 = -4080;
pub const VSL_SS_ERROR_BAD_CP_ADDR: i32 = -4081;
pub const VSL_SS_ERROR_BAD_MDAD_ADDR: i32 = -4082;
pub const VSL_SS_ERROR_BAD_MNAD_ADDR: i32 = -4083;
pub const VSL_SS_ERROR_BAD_SORTED_OBSERV_ADDR: i32 = -4084;
pub const VSL_SS_ERROR_INDICES_NOT_SUPPORTED: i32 = -4085;
pub const VSL_SS_ERROR_ROBCOV_INTERN_C1: i32 = -5000;
pub const VSL_SS_ERROR_PARTIALCOV_INTERN_C1: i32 = -5010;
pub const VSL_SS_ERROR_PARTIALCOV_INTERN_C2: i32 = -5011;
pub const VSL_SS_ERROR_MISSINGVALS_INTERN_C1: i32 = -5021;
pub const VSL_SS_ERROR_MISSINGVALS_INTERN_C2: i32 = -5022;
pub const VSL_SS_ERROR_MISSINGVALS_INTERN_C3: i32 = -5023;
pub const VSL_SS_ERROR_MISSINGVALS_INTERN_C4: i32 = -5024;
pub const VSL_SS_ERROR_MISSINGVALS_INTERN_C5: i32 = -5025;
pub const VSL_SS_ERROR_PARAMTRCOR_INTERN_C1: i32 = -5030;
pub const VSL_SS_ERROR_COVRANK_INTERNAL_ERROR_C1: i32 = -5040;
pub const VSL_SS_ERROR_INVCOV_INTERNAL_ERROR_C1: i32 = -5041;
pub const VSL_SS_ERROR_INVCOV_INTERNAL_ERROR_C2: i32 = -5042;
pub const VSL_CONV_MODE_AUTO: u32 = 0;
pub const VSL_CORR_MODE_AUTO: u32 = 0;
pub const VSL_CONV_MODE_DIRECT: u32 = 1;
pub const VSL_CORR_MODE_DIRECT: u32 = 1;
pub const VSL_CONV_MODE_FFT: u32 = 2;
pub const VSL_CORR_MODE_FFT: u32 = 2;
pub const VSL_CONV_PRECISION_SINGLE: u32 = 1;
pub const VSL_CORR_PRECISION_SINGLE: u32 = 1;
pub const VSL_CONV_PRECISION_DOUBLE: u32 = 2;
pub const VSL_CORR_PRECISION_DOUBLE: u32 = 2;
pub const VSL_MAX_REG_BRNGS: u32 = 512;
pub const VSL_BRNG_SHIFT: u32 = 20;
pub const VSL_BRNG_INC: u32 = 1048576;
pub const VSL_BRNG_MCG31: u32 = 1048576;
pub const VSL_BRNG_R250: u32 = 2097152;
pub const VSL_BRNG_MRG32K3A: u32 = 3145728;
pub const VSL_BRNG_MCG59: u32 = 4194304;
pub const VSL_BRNG_WH: u32 = 5242880;
pub const VSL_BRNG_SOBOL: u32 = 6291456;
pub const VSL_BRNG_NIEDERR: u32 = 7340032;
pub const VSL_BRNG_MT19937: u32 = 8388608;
pub const VSL_BRNG_MT2203: u32 = 9437184;
pub const VSL_BRNG_IABSTRACT: u32 = 10485760;
pub const VSL_BRNG_DABSTRACT: u32 = 11534336;
pub const VSL_BRNG_SABSTRACT: u32 = 12582912;
pub const VSL_BRNG_SFMT19937: u32 = 13631488;
pub const VSL_BRNG_NONDETERM: u32 = 14680064;
pub const VSL_BRNG_ARS5: u32 = 15728640;
pub const VSL_BRNG_PHILOX4X32X10: u32 = 16777216;
pub const VSL_BRNG_RDRAND: u32 = 0;
pub const VSL_BRNG_NONDETERM_NRETRIES: u32 = 10;
pub const VSL_QRNG_LEAPFROG_COMPONENTS: u32 = 2147483647;
pub const VSL_USER_QRNG_INITIAL_VALUES: u32 = 1;
pub const VSL_USER_PRIMITIVE_POLYMS: u32 = 1;
pub const VSL_USER_INIT_DIRECTION_NUMBERS: u32 = 2;
pub const VSL_USER_IRRED_POLYMS: u32 = 1;
pub const VSL_USER_DIRECTION_NUMBERS: u32 = 4;
pub const VSL_QRNG_OVERRIDE_1ST_DIM_INIT: u32 = 8;
pub const VSL_INIT_METHOD_STANDARD: u32 = 0;
pub const VSL_INIT_METHOD_LEAPFROG: u32 = 1;
pub const VSL_INIT_METHOD_SKIPAHEAD: u32 = 2;
pub const VSL_RNG_METHOD_ACCURACY_FLAG: u32 = 1073741824;
pub const VSL_RNG_METHOD_UNIFORM_STD: u32 = 0;
pub const VSL_RNG_METHOD_UNIFORM_STD_ACCURATE: u32 = 1073741824;
pub const VSL_RNG_METHOD_UNIFORMBITS_STD: u32 = 0;
pub const VSL_RNG_METHOD_UNIFORMBITS32_STD: u32 = 0;
pub const VSL_RNG_METHOD_UNIFORMBITS64_STD: u32 = 0;
pub const VSL_RNG_METHOD_GAUSSIAN_BOXMULLER: u32 = 0;
pub const VSL_RNG_METHOD_GAUSSIAN_BOXMULLER2: u32 = 1;
pub const VSL_RNG_METHOD_GAUSSIAN_ICDF: u32 = 2;
pub const VSL_RNG_METHOD_GAUSSIANMV_BOXMULLER: u32 = 0;
pub const VSL_RNG_METHOD_GAUSSIANMV_BOXMULLER2: u32 = 1;
pub const VSL_RNG_METHOD_GAUSSIANMV_ICDF: u32 = 2;
pub const VSL_RNG_METHOD_EXPONENTIAL_ICDF: u32 = 0;
pub const VSL_RNG_METHOD_EXPONENTIAL_ICDF_ACCURATE: u32 = 1073741824;
pub const VSL_RNG_METHOD_LAPLACE_ICDF: u32 = 0;
pub const VSL_RNG_METHOD_WEIBULL_ICDF: u32 = 0;
pub const VSL_RNG_METHOD_WEIBULL_ICDF_ACCURATE: u32 = 1073741824;
pub const VSL_RNG_METHOD_CAUCHY_ICDF: u32 = 0;
pub const VSL_RNG_METHOD_RAYLEIGH_ICDF: u32 = 0;
pub const VSL_RNG_METHOD_RAYLEIGH_ICDF_ACCURATE: u32 = 1073741824;
pub const VSL_RNG_METHOD_LOGNORMAL_BOXMULLER2: u32 = 0;
pub const VSL_RNG_METHOD_LOGNORMAL_ICDF: u32 = 1;
pub const VSL_RNG_METHOD_LOGNORMAL_BOXMULLER2_ACCURATE: u32 = 1073741824;
pub const VSL_RNG_METHOD_LOGNORMAL_ICDF_ACCURATE: u32 = 1073741825;
pub const VSL_RNG_METHOD_GUMBEL_ICDF: u32 = 0;
pub const VSL_RNG_METHOD_GAMMA_GNORM: u32 = 0;
pub const VSL_RNG_METHOD_GAMMA_GNORM_ACCURATE: u32 = 1073741824;
pub const VSL_RNG_METHOD_BETA_CJA: u32 = 0;
pub const VSL_RNG_METHOD_BETA_CJA_ACCURATE: u32 = 1073741824;
pub const VSL_RNG_METHOD_CHISQUARE_CHI2GAMMA: u32 = 0;
pub const VSL_RNG_METHOD_BERNOULLI_ICDF: u32 = 0;
pub const VSL_RNG_METHOD_GEOMETRIC_ICDF: u32 = 0;
pub const VSL_RNG_METHOD_BINOMIAL_BTPE: u32 = 0;
pub const VSL_RNG_METHOD_MULTINOMIAL_MULTPOISSON: u32 = 0;
pub const VSL_RNG_METHOD_HYPERGEOMETRIC_H2PE: u32 = 0;
pub const VSL_RNG_METHOD_POISSON_PTPE: u32 = 0;
pub const VSL_RNG_METHOD_POISSON_POISNORM: u32 = 1;
pub const VSL_RNG_METHOD_POISSONV_POISNORM: u32 = 0;
pub const VSL_RNG_METHOD_NEGBINOMIAL_NBAR: u32 = 0;
pub const VSL_MATRIX_STORAGE_FULL: u32 = 0;
pub const VSL_MATRIX_STORAGE_PACKED: u32 = 1;
pub const VSL_MATRIX_STORAGE_DIAGONAL: u32 = 2;
pub const VSL_SS_MATRIX_STORAGE_ROWS: u32 = 65536;
pub const VSL_SS_MATRIX_STORAGE_COLS: u32 = 131072;
pub const VSL_SS_MATRIX_STORAGE_FULL: u32 = 0;
pub const VSL_SS_MATRIX_STORAGE_L_PACKED: u32 = 1;
pub const VSL_SS_MATRIX_STORAGE_U_PACKED: u32 = 2;
pub const VSL_SS_METHOD_FAST: u32 = 1;
pub const VSL_SS_METHOD_1PASS: u32 = 2;
pub const VSL_SS_METHOD_FAST_USER_MEAN: u32 = 256;
pub const VSL_SS_METHOD_CP_TO_COVCOR: u32 = 512;
pub const VSL_SS_METHOD_SUM_TO_MOM: u32 = 1024;
pub const VSL_SS_METHOD_SD: u32 = 4;
pub const VSL_SS_METHOD_TBS: u32 = 8;
pub const VSL_SS_METHOD_MI: u32 = 16;
pub const VSL_SS_METHOD_BACON: u32 = 32;
pub const VSL_SS_METHOD_SQUANTS_ZW: u32 = 64;
pub const VSL_SS_METHOD_SQUANTS_ZW_FAST: u32 = 128;
pub const VSL_SS_BACON_PARAMS_N: u32 = 3;
pub const VSL_SS_METHOD_BACON_MAHALANOBIS_INIT: u32 = 1;
pub const VSL_SS_METHOD_BACON_MEDIAN_INIT: u32 = 2;
pub const VSL_SS_METHOD_RADIX: u32 = 1048576;
pub const VSL_SS_TBS_PARAMS_N: u32 = 4;
pub const VSL_SS_MI_PARAMS_SIZE: u32 = 5;
pub const VSL_SS_DNAN: i64 = -2251799813685248;
pub const VSL_SS_SNAN: u32 = 4290772992;
pub const VSL_SS_SQUANTS_ZW_PARAMS_N: u32 = 1;
pub const VSL_SS_ED_DIMEN: u32 = 1;
pub const VSL_SS_ED_OBSERV_N: u32 = 2;
pub const VSL_SS_ED_OBSERV: u32 = 3;
pub const VSL_SS_ED_OBSERV_STORAGE: u32 = 4;
pub const VSL_SS_ED_INDC: u32 = 5;
pub const VSL_SS_ED_WEIGHTS: u32 = 6;
pub const VSL_SS_ED_MEAN: u32 = 7;
pub const VSL_SS_ED_2R_MOM: u32 = 8;
pub const VSL_SS_ED_3R_MOM: u32 = 9;
pub const VSL_SS_ED_4R_MOM: u32 = 10;
pub const VSL_SS_ED_2C_MOM: u32 = 11;
pub const VSL_SS_ED_3C_MOM: u32 = 12;
pub const VSL_SS_ED_4C_MOM: u32 = 13;
pub const VSL_SS_ED_SUM: u32 = 67;
pub const VSL_SS_ED_2R_SUM: u32 = 68;
pub const VSL_SS_ED_3R_SUM: u32 = 69;
pub const VSL_SS_ED_4R_SUM: u32 = 70;
pub const VSL_SS_ED_2C_SUM: u32 = 71;
pub const VSL_SS_ED_3C_SUM: u32 = 72;
pub const VSL_SS_ED_4C_SUM: u32 = 73;
pub const VSL_SS_ED_KURTOSIS: u32 = 14;
pub const VSL_SS_ED_SKEWNESS: u32 = 15;
pub const VSL_SS_ED_MIN: u32 = 16;
pub const VSL_SS_ED_MAX: u32 = 17;
pub const VSL_SS_ED_VARIATION: u32 = 18;
pub const VSL_SS_ED_COV: u32 = 19;
pub const VSL_SS_ED_COV_STORAGE: u32 = 20;
pub const VSL_SS_ED_COR: u32 = 21;
pub const VSL_SS_ED_COR_STORAGE: u32 = 22;
pub const VSL_SS_ED_CP: u32 = 74;
pub const VSL_SS_ED_CP_STORAGE: u32 = 75;
pub const VSL_SS_ED_ACCUM_WEIGHT: u32 = 23;
pub const VSL_SS_ED_QUANT_ORDER_N: u32 = 24;
pub const VSL_SS_ED_QUANT_ORDER: u32 = 25;
pub const VSL_SS_ED_QUANT_QUANTILES: u32 = 26;
pub const VSL_SS_ED_ORDER_STATS: u32 = 27;
pub const VSL_SS_ED_GROUP_INDC: u32 = 28;
pub const VSL_SS_ED_POOLED_COV_STORAGE: u32 = 29;
pub const VSL_SS_ED_POOLED_MEAN: u32 = 30;
pub const VSL_SS_ED_POOLED_COV: u32 = 31;
pub const VSL_SS_ED_GROUP_COV_INDC: u32 = 32;
pub const VSL_SS_ED_REQ_GROUP_INDC: u32 = 32;
pub const VSL_SS_ED_GROUP_MEAN: u32 = 33;
pub const VSL_SS_ED_GROUP_COV_STORAGE: u32 = 34;
pub const VSL_SS_ED_GROUP_COV: u32 = 35;
pub const VSL_SS_ED_ROBUST_COV_STORAGE: u32 = 36;
pub const VSL_SS_ED_ROBUST_COV_PARAMS_N: u32 = 37;
pub const VSL_SS_ED_ROBUST_COV_PARAMS: u32 = 38;
pub const VSL_SS_ED_ROBUST_MEAN: u32 = 39;
pub const VSL_SS_ED_ROBUST_COV: u32 = 40;
pub const VSL_SS_ED_OUTLIERS_PARAMS_N: u32 = 41;
pub const VSL_SS_ED_OUTLIERS_PARAMS: u32 = 42;
pub const VSL_SS_ED_OUTLIERS_WEIGHT: u32 = 43;
pub const VSL_SS_ED_ORDER_STATS_STORAGE: u32 = 44;
pub const VSL_SS_ED_PARTIAL_COV_IDX: u32 = 45;
pub const VSL_SS_ED_PARTIAL_COV: u32 = 46;
pub const VSL_SS_ED_PARTIAL_COV_STORAGE: u32 = 47;
pub const VSL_SS_ED_PARTIAL_COR: u32 = 48;
pub const VSL_SS_ED_PARTIAL_COR_STORAGE: u32 = 49;
pub const VSL_SS_ED_MI_PARAMS_N: u32 = 50;
pub const VSL_SS_ED_MI_PARAMS: u32 = 51;
pub const VSL_SS_ED_MI_INIT_ESTIMATES_N: u32 = 52;
pub const VSL_SS_ED_MI_INIT_ESTIMATES: u32 = 53;
pub const VSL_SS_ED_MI_SIMUL_VALS_N: u32 = 54;
pub const VSL_SS_ED_MI_SIMUL_VALS: u32 = 55;
pub const VSL_SS_ED_MI_ESTIMATES_N: u32 = 56;
pub const VSL_SS_ED_MI_ESTIMATES: u32 = 57;
pub const VSL_SS_ED_MI_PRIOR_N: u32 = 58;
pub const VSL_SS_ED_MI_PRIOR: u32 = 59;
pub const VSL_SS_ED_PARAMTR_COR: u32 = 60;
pub const VSL_SS_ED_PARAMTR_COR_STORAGE: u32 = 61;
pub const VSL_SS_ED_STREAM_QUANT_PARAMS_N: u32 = 62;
pub const VSL_SS_ED_STREAM_QUANT_PARAMS: u32 = 63;
pub const VSL_SS_ED_STREAM_QUANT_ORDER_N: u32 = 64;
pub const VSL_SS_ED_STREAM_QUANT_ORDER: u32 = 65;
pub const VSL_SS_ED_STREAM_QUANT_QUANTILES: u32 = 66;
pub const VSL_SS_ED_MDAD: u32 = 76;
pub const VSL_SS_ED_MNAD: u32 = 77;
pub const VSL_SS_ED_SORTED_OBSERV: u32 = 78;
pub const VSL_SS_ED_SORTED_OBSERV_STORAGE: u32 = 79;
pub const VSL_SS_MEAN: u32 = 1;
pub const VSL_SS_2R_MOM: u32 = 2;
pub const VSL_SS_3R_MOM: u32 = 4;
pub const VSL_SS_4R_MOM: u32 = 8;
pub const VSL_SS_2C_MOM: u32 = 16;
pub const VSL_SS_3C_MOM: u32 = 32;
pub const VSL_SS_4C_MOM: u32 = 64;
pub const VSL_SS_SUM: u32 = 33554432;
pub const VSL_SS_2R_SUM: u32 = 67108864;
pub const VSL_SS_3R_SUM: u32 = 134217728;
pub const VSL_SS_4R_SUM: u32 = 268435456;
pub const VSL_SS_2C_SUM: u32 = 536870912;
pub const VSL_SS_3C_SUM: u32 = 1073741824;
pub const VSL_SS_4C_SUM: u32 = 2147483648;
pub const VSL_SS_KURTOSIS: u32 = 128;
pub const VSL_SS_SKEWNESS: u32 = 256;
pub const VSL_SS_VARIATION: u32 = 512;
pub const VSL_SS_MIN: u32 = 1024;
pub const VSL_SS_MAX: u32 = 2048;
pub const VSL_SS_COV: u32 = 4096;
pub const VSL_SS_COR: u32 = 8192;
pub const VSL_SS_CP: u64 = 4294967296;
pub const VSL_SS_POOLED_COV: u32 = 16384;
pub const VSL_SS_GROUP_COV: u32 = 32768;
pub const VSL_SS_POOLED_MEAN: u64 = 34359738368;
pub const VSL_SS_GROUP_MEAN: u64 = 68719476736;
pub const VSL_SS_QUANTS: u32 = 65536;
pub const VSL_SS_ORDER_STATS: u32 = 131072;
pub const VSL_SS_SORTED_OBSERV: u64 = 549755813888;
pub const VSL_SS_ROBUST_COV: u32 = 262144;
pub const VSL_SS_OUTLIERS: u32 = 524288;
pub const VSL_SS_PARTIAL_COV: u32 = 1048576;
pub const VSL_SS_PARTIAL_COR: u32 = 2097152;
pub const VSL_SS_MISSING_VALS: u32 = 4194304;
pub const VSL_SS_PARAMTR_COR: u32 = 8388608;
pub const VSL_SS_STREAM_QUANTS: u32 = 16777216;
pub const VSL_SS_MDAD: u64 = 8589934592;
pub const VSL_SS_MNAD: u64 = 17179869184;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialOrd, PartialEq)]
pub struct _MKL_Complex8 {
    pub real: f32,
    pub imag: f32,
}
#[test]
fn bindgen_test_layout__MKL_Complex8() {
    assert_eq!(
        ::core::mem::size_of::<_MKL_Complex8>(),
        8usize,
        concat!("Size of: ", stringify!(_MKL_Complex8))
    );
    assert_eq!(
        ::core::mem::align_of::<_MKL_Complex8>(),
        4usize,
        concat!("Alignment of ", stringify!(_MKL_Complex8))
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_MKL_Complex8>())).real as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_MKL_Complex8),
            "::",
            stringify!(real)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_MKL_Complex8>())).imag as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(_MKL_Complex8),
            "::",
            stringify!(imag)
        )
    );
}
pub type MKL_Complex8 = _MKL_Complex8;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, PartialOrd, PartialEq)]
pub struct _MKL_Complex16 {
    pub real: f64,
    pub imag: f64,
}
#[test]
fn bindgen_test_layout__MKL_Complex16() {
    assert_eq!(
        ::core::mem::size_of::<_MKL_Complex16>(),
        16usize,
        concat!("Size of: ", stringify!(_MKL_Complex16))
    );
    assert_eq!(
        ::core::mem::align_of::<_MKL_Complex16>(),
        8usize,
        concat!("Alignment of ", stringify!(_MKL_Complex16))
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_MKL_Complex16>())).real as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_MKL_Complex16),
            "::",
            stringify!(real)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_MKL_Complex16>())).imag as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_MKL_Complex16),
            "::",
            stringify!(imag)
        )
    );
}
pub type MKL_Complex16 = _MKL_Complex16;
#[repr(C)]
#[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub struct MKLVersion {
    pub MajorVersion: ::std::os::raw::c_int,
    pub MinorVersion: ::std::os::raw::c_int,
    pub UpdateVersion: ::std::os::raw::c_int,
    pub ProductStatus: *mut ::std::os::raw::c_char,
    pub Build: *mut ::std::os::raw::c_char,
    pub Processor: *mut ::std::os::raw::c_char,
    pub Platform: *mut ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_MKLVersion() {
    assert_eq!(
        ::core::mem::size_of::<MKLVersion>(),
        48usize,
        concat!("Size of: ", stringify!(MKLVersion))
    );
    assert_eq!(
        ::core::mem::align_of::<MKLVersion>(),
        8usize,
        concat!("Alignment of ", stringify!(MKLVersion))
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<MKLVersion>())).MajorVersion as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(MajorVersion)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<MKLVersion>())).MinorVersion as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(MinorVersion)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<MKLVersion>())).UpdateVersion as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(UpdateVersion)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<MKLVersion>())).ProductStatus as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(ProductStatus)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<MKLVersion>())).Build as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(Build)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<MKLVersion>())).Processor as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(Processor)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<MKLVersion>())).Platform as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(MKLVersion),
            "::",
            stringify!(Platform)
        )
    );
}
impl Default for MKLVersion {
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
pub const MKL_LAYOUT_MKL_ROW_MAJOR: MKL_LAYOUT = 101;
pub const MKL_LAYOUT_MKL_COL_MAJOR: MKL_LAYOUT = 102;
pub type MKL_LAYOUT = u32;
pub const MKL_TRANSPOSE_MKL_NOTRANS: MKL_TRANSPOSE = 111;
pub const MKL_TRANSPOSE_MKL_TRANS: MKL_TRANSPOSE = 112;
pub const MKL_TRANSPOSE_MKL_CONJTRANS: MKL_TRANSPOSE = 113;
pub type MKL_TRANSPOSE = u32;
pub const MKL_UPLO_MKL_UPPER: MKL_UPLO = 121;
pub const MKL_UPLO_MKL_LOWER: MKL_UPLO = 122;
pub type MKL_UPLO = u32;
pub const MKL_DIAG_MKL_NONUNIT: MKL_DIAG = 131;
pub const MKL_DIAG_MKL_UNIT: MKL_DIAG = 132;
pub type MKL_DIAG = u32;
pub const MKL_SIDE_MKL_LEFT: MKL_SIDE = 141;
pub const MKL_SIDE_MKL_RIGHT: MKL_SIDE = 142;
pub type MKL_SIDE = u32;
pub const MKL_COMPACT_PACK_MKL_COMPACT_SSE: MKL_COMPACT_PACK = 181;
pub const MKL_COMPACT_PACK_MKL_COMPACT_AVX: MKL_COMPACT_PACK = 182;
pub const MKL_COMPACT_PACK_MKL_COMPACT_AVX512: MKL_COMPACT_PACK = 183;
pub type MKL_COMPACT_PACK = u32;
pub type sgemm_jit_kernel_t = ::core::option::Option<
    unsafe extern "C" fn(
        arg1: *mut ::core::ffi::c_void,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *mut f32,
    ),
>;
pub type dgemm_jit_kernel_t = ::core::option::Option<
    unsafe extern "C" fn(
        arg1: *mut ::core::ffi::c_void,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *mut f64,
    ),
>;
pub type cgemm_jit_kernel_t = ::core::option::Option<
    unsafe extern "C" fn(
        arg1: *mut ::core::ffi::c_void,
        arg2: *mut MKL_Complex8,
        arg3: *mut MKL_Complex8,
        arg4: *mut MKL_Complex8,
    ),
>;
pub type zgemm_jit_kernel_t = ::core::option::Option<
    unsafe extern "C" fn(
        arg1: *mut ::core::ffi::c_void,
        arg2: *mut MKL_Complex16,
        arg3: *mut MKL_Complex16,
        arg4: *mut MKL_Complex16,
    ),
>;
pub const mkl_jit_status_t_MKL_JIT_SUCCESS: mkl_jit_status_t = 0;
pub const mkl_jit_status_t_MKL_NO_JIT: mkl_jit_status_t = 1;
pub const mkl_jit_status_t_MKL_JIT_ERROR: mkl_jit_status_t = 2;
pub type mkl_jit_status_t = u32;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct _DefVmlErrorContext {
    pub iCode: ::std::os::raw::c_int,
    pub iIndex: ::std::os::raw::c_int,
    pub dbA1: f64,
    pub dbA2: f64,
    pub dbR1: f64,
    pub dbR2: f64,
    pub cFuncName: [::std::os::raw::c_char; 64usize],
    pub iFuncNameLen: ::std::os::raw::c_int,
    pub dbA1Im: f64,
    pub dbA2Im: f64,
    pub dbR1Im: f64,
    pub dbR2Im: f64,
}
#[test]
fn bindgen_test_layout__DefVmlErrorContext() {
    assert_eq!(
        ::core::mem::size_of::<_DefVmlErrorContext>(),
        144usize,
        concat!("Size of: ", stringify!(_DefVmlErrorContext))
    );
    assert_eq!(
        ::core::mem::align_of::<_DefVmlErrorContext>(),
        8usize,
        concat!("Alignment of ", stringify!(_DefVmlErrorContext))
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_DefVmlErrorContext>())).iCode as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_DefVmlErrorContext),
            "::",
            stringify!(iCode)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_DefVmlErrorContext>())).iIndex as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(_DefVmlErrorContext),
            "::",
            stringify!(iIndex)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_DefVmlErrorContext>())).dbA1 as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_DefVmlErrorContext),
            "::",
            stringify!(dbA1)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_DefVmlErrorContext>())).dbA2 as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_DefVmlErrorContext),
            "::",
            stringify!(dbA2)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_DefVmlErrorContext>())).dbR1 as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(_DefVmlErrorContext),
            "::",
            stringify!(dbR1)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_DefVmlErrorContext>())).dbR2 as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(_DefVmlErrorContext),
            "::",
            stringify!(dbR2)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_DefVmlErrorContext>())).cFuncName as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(_DefVmlErrorContext),
            "::",
            stringify!(cFuncName)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::core::ptr::null::<_DefVmlErrorContext>())).iFuncNameLen as *const _ as usize
        },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(_DefVmlErrorContext),
            "::",
            stringify!(iFuncNameLen)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_DefVmlErrorContext>())).dbA1Im as *const _ as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(_DefVmlErrorContext),
            "::",
            stringify!(dbA1Im)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_DefVmlErrorContext>())).dbA2Im as *const _ as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(_DefVmlErrorContext),
            "::",
            stringify!(dbA2Im)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_DefVmlErrorContext>())).dbR1Im as *const _ as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(_DefVmlErrorContext),
            "::",
            stringify!(dbR1Im)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_DefVmlErrorContext>())).dbR2Im as *const _ as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(_DefVmlErrorContext),
            "::",
            stringify!(dbR2Im)
        )
    );
}
impl Default for _DefVmlErrorContext {
    fn default() -> Self {
        unsafe { ::core::mem::zeroed() }
    }
}
pub type DefVmlErrorContext = _DefVmlErrorContext;
pub type VMLErrorCallBack = ::core::option::Option<
    unsafe extern "C" fn(pdefVmlErrorContext: *mut DefVmlErrorContext) -> ::std::os::raw::c_int,
>;
extern "C" {
    pub fn VSABS_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDABS_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsabs_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdabs_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAbs(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAbs(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSABS_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDABS_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsabs_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdabs_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAbs(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAbs(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCABS_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut f32);
}
extern "C" {
    pub fn VZABS_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut f64);
}
extern "C" {
    pub fn vcabs_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut f32);
}
extern "C" {
    pub fn vzabs_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut f64);
}
extern "C" {
    pub fn vcAbs(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut f32);
}
extern "C" {
    pub fn vzAbs(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut f64);
}
extern "C" {
    pub fn VMCABS_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZABS_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcabs_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzabs_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcAbs(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzAbs(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCARG_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut f32);
}
extern "C" {
    pub fn VZARG_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut f64);
}
extern "C" {
    pub fn vcarg_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut f32);
}
extern "C" {
    pub fn vzarg_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut f64);
}
extern "C" {
    pub fn vcArg(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut f32);
}
extern "C" {
    pub fn vzArg(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut f64);
}
extern "C" {
    pub fn VMCARG_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZARG_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcarg_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzarg_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcArg(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzArg(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSADD_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDADD_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsadd_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdadd_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAdd(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAdd(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSADD_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDADD_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsadd_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdadd_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAdd(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAdd(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCADD_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn VZADD_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcadd_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzadd_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcAdd(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzAdd(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn VMCADD_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZADD_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcadd_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzadd_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcAdd(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzAdd(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSSUB_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDSUB_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vssub_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdsub_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsSub(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdSub(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSSUB_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDSUB_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmssub_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdsub_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsSub(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdSub(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCSUB_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn VZSUB_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcsub_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzsub_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcSub(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzSub(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn VMCSUB_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZSUB_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcsub_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzsub_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcSub(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzSub(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSINV_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDINV_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsinv_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdinv_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsInv(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdInv(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSINV_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDINV_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsinv_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdinv_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsInv(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdInv(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSSQRT_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDSQRT_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vssqrt_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdsqrt_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsSqrt(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdSqrt(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSSQRT_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDSQRT_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmssqrt_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdsqrt_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsSqrt(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdSqrt(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCSQRT_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZSQRT_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcsqrt_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzsqrt_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcSqrt(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzSqrt(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCSQRT_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZSQRT_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcsqrt_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzsqrt_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcSqrt(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzSqrt(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSINVSQRT_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDINVSQRT_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsinvsqrt_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdinvsqrt_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsInvSqrt(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdInvSqrt(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSINVSQRT_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDINVSQRT_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsinvsqrt_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdinvsqrt_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsInvSqrt(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdInvSqrt(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSCBRT_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDCBRT_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vscbrt_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdcbrt_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsCbrt(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdCbrt(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSCBRT_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDCBRT_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmscbrt_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdcbrt_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsCbrt(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdCbrt(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSINVCBRT_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDINVCBRT_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsinvcbrt_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdinvcbrt_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsInvCbrt(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdInvCbrt(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSINVCBRT_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDINVCBRT_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsinvcbrt_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdinvcbrt_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsInvCbrt(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdInvCbrt(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSSQR_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDSQR_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vssqr_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdsqr_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsSqr(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdSqr(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSSQR_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDSQR_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmssqr_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdsqr_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsSqr(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdSqr(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSEXP_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDEXP_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsexp_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdexp_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsExp(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdExp(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSEXP_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDEXP_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsexp_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdexp_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsExp(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdExp(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCEXP_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZEXP_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcexp_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzexp_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcExp(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzExp(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCEXP_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZEXP_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcexp_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzexp_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcExp(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzExp(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSEXP2_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDEXP2_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsexp2_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdexp2_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsExp2(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdExp2(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSEXP2_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDEXP2_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsexp2_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdexp2_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsExp2(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdExp2(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSEXP10_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDEXP10_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsexp10_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdexp10_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsExp10(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdExp10(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSEXP10_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDEXP10_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsexp10_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdexp10_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsExp10(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdExp10(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSEXPM1_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDEXPM1_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsexpm1_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdexpm1_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsExpm1(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdExpm1(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSEXPM1_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDEXPM1_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsexpm1_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdexpm1_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsExpm1(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdExpm1(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSLN_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDLN_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsln_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdln_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsLn(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdLn(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSLN_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDLN_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsln_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdln_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsLn(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdLn(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCLN_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZLN_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcln_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzln_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcLn(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzLn(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCLN_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZLN_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcln_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzln_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcLn(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzLn(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSLOG2_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDLOG2_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vslog2_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdlog2_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsLog2(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdLog2(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSLOG2_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDLOG2_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmslog2_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdlog2_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsLog2(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdLog2(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSLOG10_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDLOG10_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vslog10_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdlog10_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsLog10(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdLog10(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSLOG10_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDLOG10_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmslog10_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdlog10_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsLog10(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdLog10(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCLOG10_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZLOG10_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vclog10_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzlog10_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcLog10(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzLog10(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCLOG10_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZLOG10_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmclog10_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzlog10_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcLog10(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzLog10(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSLOG1P_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDLOG1P_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vslog1p_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdlog1p_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsLog1p(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdLog1p(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSLOG1P_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDLOG1P_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmslog1p_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdlog1p_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsLog1p(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdLog1p(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSLOGB_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDLOGB_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vslogb_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdlogb_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsLogb(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdLogb(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSLOGB_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDLOGB_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmslogb_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdlogb_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsLogb(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdLogb(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSCOS_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDCOS_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vscos_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdcos_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsCos(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdCos(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSCOS_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDCOS_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmscos_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdcos_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsCos(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdCos(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCCOS_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZCOS_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vccos_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzcos_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcCos(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzCos(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCCOS_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZCOS_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmccos_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzcos_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcCos(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzCos(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSSIN_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDSIN_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vssin_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdsin_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsSin(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdSin(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSSIN_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDSIN_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmssin_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdsin_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsSin(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdSin(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCSIN_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZSIN_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcsin_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzsin_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcSin(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzSin(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCSIN_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZSIN_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcsin_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzsin_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcSin(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzSin(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSTAN_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDTAN_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vstan_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdtan_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsTan(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdTan(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSTAN_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDTAN_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmstan_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdtan_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsTan(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdTan(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCTAN_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZTAN_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vctan_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vztan_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcTan(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzTan(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCTAN_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZTAN_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmctan_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmztan_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcTan(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzTan(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSCOSPI_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDCOSPI_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vscospi_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdcospi_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsCospi(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdCospi(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSCOSPI_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDCospi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmscospi_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdcospi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsCospi(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdCospi(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSSINPI_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDSINPI_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vssinpi_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdsinpi_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsSinpi(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdSinpi(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSSINPI_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDSinpi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmssinpi_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdsinpi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsSinpi(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdSinpi(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSTANPI_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDTANPI_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vstanpi_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdtanpi_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsTanpi(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdTanpi(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSTANPI_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDTanpi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmstanpi_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdtanpi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsTanpi(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdTanpi(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSCOSD_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDCOSD_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vscosd_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdcosd_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsCosd(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdCosd(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSCOSD_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDCosd_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmscosd_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdcosd_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsCosd(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdCosd(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSSIND_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDSIND_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vssind_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdsind_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsSind(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdSind(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSSIND_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDSind_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmssind_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdsind_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsSind(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdSind(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSTAND_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDTAND_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vstand_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdtand_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsTand(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdTand(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSTAND_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDTand_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmstand_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdtand_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsTand(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdTand(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSCOSH_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDCOSH_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vscosh_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdcosh_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsCosh(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdCosh(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSCOSH_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDCOSH_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmscosh_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdcosh_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsCosh(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdCosh(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCCOSH_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZCOSH_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vccosh_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzcosh_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcCosh(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzCosh(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCCOSH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZCOSH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmccosh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzcosh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcCosh(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzCosh(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSSINH_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDSINH_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vssinh_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdsinh_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsSinh(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdSinh(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSSINH_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDSINH_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmssinh_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdsinh_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsSinh(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdSinh(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCSINH_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZSINH_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcsinh_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzsinh_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcSinh(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzSinh(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCSINH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZSINH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcsinh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzsinh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcSinh(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzSinh(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSTANH_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDTANH_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vstanh_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdtanh_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsTanh(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdTanh(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSTANH_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDTANH_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmstanh_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdtanh_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsTanh(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdTanh(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCTANH_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZTANH_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vctanh_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vztanh_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcTanh(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzTanh(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCTANH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZTANH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmctanh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmztanh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcTanh(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzTanh(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSACOS_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDACOS_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsacos_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdacos_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAcos(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAcos(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSACOS_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDACOS_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsacos_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdacos_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAcos(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAcos(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCACOS_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZACOS_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcacos_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzacos_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcAcos(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzAcos(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCACOS_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZACOS_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcacos_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzacos_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcAcos(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzAcos(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSASIN_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDASIN_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsasin_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdasin_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAsin(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAsin(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSASIN_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDASIN_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsasin_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdasin_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAsin(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAsin(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCASIN_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZASIN_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcasin_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzasin_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcAsin(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzAsin(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCASIN_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZASIN_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcasin_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzasin_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcAsin(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzAsin(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSATAN_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDATAN_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsatan_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdatan_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAtan(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAtan(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSATAN_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDATAN_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsatan_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdatan_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAtan(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAtan(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCATAN_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZATAN_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcatan_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzatan_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcAtan(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzAtan(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCATAN_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZATAN_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcatan_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzatan_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcAtan(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzAtan(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSACOSPI_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDACOSPI_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsacospi_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdacospi_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAcospi(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAcospi(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSACOSPI_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDAcospi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsacospi_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdacospi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAcospi(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAcospi(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSASINPI_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDASINPI_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsasinpi_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdasinpi_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAsinpi(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAsinpi(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSASINPI_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDAsinpi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsasinpi_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdasinpi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAsinpi(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAsinpi(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSATANPI_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDATANPI_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsatanpi_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdatanpi_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAtanpi(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAtanpi(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSATANPI_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDAtanpi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsatanpi_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdatanpi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAtanpi(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAtanpi(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSACOSH_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDACOSH_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsacosh_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdacosh_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAcosh(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAcosh(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSACOSH_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDACOSH_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsacosh_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdacosh_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAcosh(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAcosh(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCACOSH_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZACOSH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcacosh_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzacosh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcAcosh(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzAcosh(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCACOSH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZACOSH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcacosh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzacosh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcAcosh(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzAcosh(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSASINH_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDASINH_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsasinh_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdasinh_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAsinh(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAsinh(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSASINH_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDASINH_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsasinh_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdasinh_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAsinh(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAsinh(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCASINH_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZASINH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcasinh_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzasinh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcAsinh(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzAsinh(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCASINH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZASINH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcasinh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzasinh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcAsinh(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzAsinh(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSATANH_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDATANH_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsatanh_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdatanh_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAtanh(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAtanh(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSATANH_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDATANH_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsatanh_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdatanh_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAtanh(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAtanh(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCATANH_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZATANH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcatanh_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzatanh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcAtanh(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzAtanh(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCATANH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZATANH_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcatanh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzatanh_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcAtanh(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzAtanh(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSERF_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDERF_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vserf_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vderf_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsErf(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdErf(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSERF_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDERF_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmserf_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmderf_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsErf(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdErf(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSERFINV_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDERFINV_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vserfinv_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vderfinv_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsErfInv(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdErfInv(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSERFINV_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDERFINV_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmserfinv_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmderfinv_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsErfInv(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdErfInv(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSHYPOT_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDHYPOT_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vshypot_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdhypot_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsHypot(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdHypot(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSHYPOT_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDHYPOT_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmshypot_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdhypot_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsHypot(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdHypot(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSERFC_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDERFC_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vserfc_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vderfc_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsErfc(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdErfc(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSERFC_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDERFC_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmserfc_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmderfc_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsErfc(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdErfc(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSERFCINV_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDERFCINV_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vserfcinv_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vderfcinv_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsErfcInv(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdErfcInv(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSERFCINV_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDERFCINV_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmserfcinv_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmderfcinv_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsErfcInv(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdErfcInv(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSCDFNORM_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDCDFNORM_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vscdfnorm_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdcdfnorm_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsCdfNorm(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdCdfNorm(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSCDFNORM_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDCDFNORM_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmscdfnorm_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdcdfnorm_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsCdfNorm(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdCdfNorm(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSCDFNORMINV_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDCDFNORMINV_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vscdfnorminv_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdcdfnorminv_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsCdfNormInv(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdCdfNormInv(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSCDFNORMINV_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDCDFNORMINV_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmscdfnorminv_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdcdfnorminv_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsCdfNormInv(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdCdfNormInv(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSLGAMMA_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDLGAMMA_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vslgamma_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdlgamma_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsLGamma(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdLGamma(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSLGAMMA_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDLGAMMA_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmslgamma_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdlgamma_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsLGamma(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdLGamma(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSTGAMMA_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDTGAMMA_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vstgamma_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdtgamma_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsTGamma(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdTGamma(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSTGAMMA_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDTGAMMA_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmstgamma_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdtgamma_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsTGamma(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdTGamma(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSATAN2_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDATAN2_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsatan2_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdatan2_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAtan2(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAtan2(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSATAN2_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDATAN2_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsatan2_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdatan2_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAtan2(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAtan2(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSATAN2PI_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDATAN2PI_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsatan2pi_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdatan2pi_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsAtan2pi(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdAtan2pi(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSATAN2PI_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDATAN2PI_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsatan2pi_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdatan2pi_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsAtan2pi(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdAtan2pi(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSMUL_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDMUL_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsmul_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdmul_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsMul(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdMul(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSMUL_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDMUL_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsmul_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdmul_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsMul(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdMul(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCMUL_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn VZMUL_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcmul_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzmul_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcMul(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzMul(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn VMCMUL_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZMUL_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcmul_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzmul_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcMul(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzMul(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSDIV_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDDIV_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsdiv_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vddiv_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsDiv(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdDiv(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSDIV_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDDIV_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsdiv_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmddiv_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsDiv(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdDiv(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCDIV_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn VZDIV_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcdiv_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzdiv_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcDiv(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzDiv(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn VMCDIV_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZDIV_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcdiv_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzdiv_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcDiv(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzDiv(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSPOW_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDPOW_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vspow_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdpow_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsPow(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdPow(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSPOW_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDPOW_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmspow_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdpow_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsPow(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdPow(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCPOW_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn VZPOW_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcpow_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzpow_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcPow(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzPow(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn VMCPOW_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZPOW_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcpow_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzpow_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcPow(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzPow(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSPOW3O2_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDPOW3O2_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vspow3o2_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdpow3o2_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsPow3o2(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdPow3o2(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSPOW3O2_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDPOW3O2_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmspow3o2_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdpow3o2_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsPow3o2(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdPow3o2(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSPOW2O3_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDPOW2O3_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vspow2o3_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdpow2o3_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsPow2o3(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdPow2o3(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSPOW2O3_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDPOW2O3_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmspow2o3_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdpow2o3_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsPow2o3(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdPow2o3(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSPOWX_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDPOWX_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vspowx_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdpowx_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsPowx(n: ::std::os::raw::c_int, a: *const f32, b: f32, r: *mut f32);
}
extern "C" {
    pub fn vdPowx(n: ::std::os::raw::c_int, a: *const f64, b: f64, r: *mut f64);
}
extern "C" {
    pub fn VMSPOWX_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDPOWX_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmspowx_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdpowx_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsPowx(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdPowx(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCPOWX_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn VZPOWX_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcpowx_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzpowx_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcPowx(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzPowx(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn VMCPOWX_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZPOWX_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcpowx_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzpowx_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcPowx(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzPowx(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSPOWR_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDPOWR_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vspowr_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdpowr_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsPowr(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdPowr(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSPOWR_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDPOWR_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmspowr_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdpowr_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsPowr(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdPowr(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSSINCOS_(n: *const ::std::os::raw::c_int, a: *const f32, r1: *mut f32, r2: *mut f32);
}
extern "C" {
    pub fn VDSINCOS_(n: *const ::std::os::raw::c_int, a: *const f64, r1: *mut f64, r2: *mut f64);
}
extern "C" {
    pub fn vssincos_(n: *const ::std::os::raw::c_int, a: *const f32, r1: *mut f32, r2: *mut f32);
}
extern "C" {
    pub fn vdsincos_(n: *const ::std::os::raw::c_int, a: *const f64, r1: *mut f64, r2: *mut f64);
}
extern "C" {
    pub fn vsSinCos(n: ::std::os::raw::c_int, a: *const f32, r1: *mut f32, r2: *mut f32);
}
extern "C" {
    pub fn vdSinCos(n: ::std::os::raw::c_int, a: *const f64, r1: *mut f64, r2: *mut f64);
}
extern "C" {
    pub fn VMSSINCOS_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r1: *mut f32,
        r2: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDSINCOS_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r1: *mut f64,
        r2: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmssincos_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r1: *mut f32,
        r2: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdsincos_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r1: *mut f64,
        r2: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsSinCos(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r1: *mut f32,
        r2: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdSinCos(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r1: *mut f64,
        r2: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSLINEARFRAC_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        scalea: *const f32,
        shifta: *const f32,
        scaleb: *const f32,
        shiftb: *const f32,
        r: *mut f32,
    );
}
extern "C" {
    pub fn VDLINEARFRAC_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        scalea: *const f64,
        shifta: *const f64,
        scaleb: *const f64,
        shiftb: *const f64,
        r: *mut f64,
    );
}
extern "C" {
    pub fn vslinearfrac_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        scalea: *const f32,
        shifta: *const f32,
        scaleb: *const f32,
        shiftb: *const f32,
        r: *mut f32,
    );
}
extern "C" {
    pub fn vdlinearfrac_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        scalea: *const f64,
        shifta: *const f64,
        scaleb: *const f64,
        shiftb: *const f64,
        r: *mut f64,
    );
}
extern "C" {
    pub fn vsLinearFrac(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        scalea: f32,
        shifta: f32,
        scaleb: f32,
        shiftb: f32,
        r: *mut f32,
    );
}
extern "C" {
    pub fn vdLinearFrac(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        scalea: f64,
        shifta: f64,
        scaleb: f64,
        shiftb: f64,
        r: *mut f64,
    );
}
extern "C" {
    pub fn VMSLINEARFRAC_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        scalea: *const f32,
        shifta: *const f32,
        scaleb: *const f32,
        shiftb: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDLINEARFRAC_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        scalea: *const f64,
        shifta: *const f64,
        scaleb: *const f64,
        shiftb: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmslinearfrac_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        scalea: *const f32,
        shifta: *const f32,
        scaleb: *const f32,
        shiftb: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdlinearfrac_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        scalea: *const f64,
        shifta: *const f64,
        scaleb: *const f64,
        shiftb: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsLinearFrac(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        scalea: f32,
        shifta: f32,
        scaleb: f32,
        shiftb: f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdLinearFrac(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        scalea: f64,
        shifta: f64,
        scaleb: f64,
        shiftb: f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSCEIL_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDCEIL_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsceil_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdceil_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsCeil(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdCeil(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSCEIL_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDCEIL_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsceil_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdceil_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsCeil(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdCeil(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSFLOOR_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDFLOOR_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsfloor_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdfloor_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsFloor(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdFloor(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSFLOOR_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDFLOOR_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsfloor_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdfloor_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsFloor(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdFloor(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSFRAC_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDFRAC_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsfrac_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdfrac_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsFrac(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdFrac(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSFRAC_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDFRAC_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsfrac_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdfrac_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsFrac(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdFrac(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSMODF_(n: *const ::std::os::raw::c_int, a: *const f32, r1: *mut f32, r2: *mut f32);
}
extern "C" {
    pub fn VDMODF_(n: *const ::std::os::raw::c_int, a: *const f64, r1: *mut f64, r2: *mut f64);
}
extern "C" {
    pub fn vsmodf_(n: *const ::std::os::raw::c_int, a: *const f32, r1: *mut f32, r2: *mut f32);
}
extern "C" {
    pub fn vdmodf_(n: *const ::std::os::raw::c_int, a: *const f64, r1: *mut f64, r2: *mut f64);
}
extern "C" {
    pub fn vsModf(n: ::std::os::raw::c_int, a: *const f32, r1: *mut f32, r2: *mut f32);
}
extern "C" {
    pub fn vdModf(n: ::std::os::raw::c_int, a: *const f64, r1: *mut f64, r2: *mut f64);
}
extern "C" {
    pub fn VMSMODF_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r1: *mut f32,
        r2: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDMODF_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r1: *mut f64,
        r2: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsmodf_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r1: *mut f32,
        r2: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdmodf_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r1: *mut f64,
        r2: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsModf(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r1: *mut f32,
        r2: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdModf(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r1: *mut f64,
        r2: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSFMOD_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDFMOD_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsfmod_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdfmod_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsFmod(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdFmod(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSFMOD_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDFMOD_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsfmod_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdfmod_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsFmod(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdFmod(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSREMAINDER_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDREMAINDER_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsremainder_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdremainder_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsRemainder(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdRemainder(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSREMAINDER_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDREMAINDER_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsremainder_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdremainder_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsRemainder(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdRemainder(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSNEXTAFTER_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDNEXTAFTER_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsnextafter_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdnextafter_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsNextAfter(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdNextAfter(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSNEXTAFTER_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDNEXTAFTER_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsnextafter_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdnextafter_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsNextAfter(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdNextAfter(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSCOPYSIGN_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDCOPYSIGN_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vscopysign_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdcopysign_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsCopySign(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdCopySign(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSCOPYSIGN_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDCOPYSIGN_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmscopysign_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdcopysign_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsCopySign(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdCopySign(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSFDIM_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDFDIM_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsfdim_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdfdim_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsFdim(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdFdim(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSFDIM_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDFDIM_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsfdim_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdfdim_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsFdim(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdFdim(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSFMAX_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDFMAX_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsfmax_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdfmax_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsFmax(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdFmax(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSFMAX_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDFMAX_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsfmax_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdfmax_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsFmax(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdFmax(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSFMIN_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDFMIN_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsfmin_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdfmin_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsFmin(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdFmin(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSFMIN_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDFMIN_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsfmin_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdfmin_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsFmin(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdFmin(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSMAXMAG_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDMAXMAG_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsmaxmag_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdmaxmag_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsMaxMag(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdMaxMag(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSMAXMAG_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDMAXMAG_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsmaxmag_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdmaxmag_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsMaxMag(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdMaxMag(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSMINMAG_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDMINMAG_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsminmag_(n: *const ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdminmag_(n: *const ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsMinMag(n: ::std::os::raw::c_int, a: *const f32, b: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdMinMag(n: ::std::os::raw::c_int, a: *const f64, b: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSMINMAG_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDMINMAG_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsminmag_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdminmag_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsMinMag(
        n: ::std::os::raw::c_int,
        a: *const f32,
        b: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdMinMag(
        n: ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSNEARBYINT_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDNEARBYINT_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsnearbyint_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdnearbyint_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsNearbyInt(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdNearbyInt(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSNEARBYINT_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDNEARBYINT_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsnearbyint_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdnearbyint_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsNearbyInt(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdNearbyInt(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSRINT_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDRINT_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsrint_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdrint_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsRint(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdRint(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSRINT_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDRINT_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsrint_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdrint_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsRint(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdRint(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSROUND_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDROUND_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsround_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdround_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsRound(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdRound(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSROUND_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDROUND_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsround_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdround_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsRound(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdRound(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSTRUNC_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDTRUNC_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vstrunc_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdtrunc_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsTrunc(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdTrunc(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSTRUNC_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDTRUNC_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmstrunc_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdtrunc_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsTrunc(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdTrunc(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCCONJ_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZCONJ_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcconj_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzconj_(n: *const ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcConj(n: ::std::os::raw::c_int, a: *const MKL_Complex8, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzConj(n: ::std::os::raw::c_int, a: *const MKL_Complex16, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCCONJ_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZCONJ_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcconj_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzconj_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcConj(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzConj(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCMULBYCONJ_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn VZMULBYCONJ_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcmulbyconj_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzmulbyconj_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcMulByConj(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzMulByConj(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn VMCMULBYCONJ_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZMULBYCONJ_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcmulbyconj_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzmulbyconj_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcMulByConj(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        b: *const MKL_Complex8,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzMulByConj(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        b: *const MKL_Complex16,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VCCIS_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn VZCIS_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vccis_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzcis_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn vcCIS(n: ::std::os::raw::c_int, a: *const f32, r: *mut MKL_Complex8);
}
extern "C" {
    pub fn vzCIS(n: ::std::os::raw::c_int, a: *const f64, r: *mut MKL_Complex16);
}
extern "C" {
    pub fn VMCCIS_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMZCIS_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmccis_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut MKL_Complex8,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzcis_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut MKL_Complex16,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmcCIS(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut MKL_Complex8,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmzCIS(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut MKL_Complex16,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSEXPINT1_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn VDEXPINT1_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsexpint1_(n: *const ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdexpint1_(n: *const ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn vsExpInt1(n: ::std::os::raw::c_int, a: *const f32, r: *mut f32);
}
extern "C" {
    pub fn vdExpInt1(n: ::std::os::raw::c_int, a: *const f64, r: *mut f64);
}
extern "C" {
    pub fn VMSEXPINT1_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VMDEXPINT1_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsexpint1_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdexpint1_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: *mut ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmsExpInt1(
        n: ::std::os::raw::c_int,
        a: *const f32,
        r: *mut f32,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn vmdExpInt1(
        n: ::std::os::raw::c_int,
        a: *const f64,
        r: *mut f64,
        mode: ::std::os::raw::c_longlong,
    );
}
extern "C" {
    pub fn VSPACKI_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        incra: *const ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn VDPACKI_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        incra: *const ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn vspacki_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        incra: *const ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn vdpacki_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        incra: *const ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn vsPackI(
        n: ::std::os::raw::c_int,
        a: *const f32,
        incra: ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn vdPackI(
        n: ::std::os::raw::c_int,
        a: *const f64,
        incra: ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn VCPACKI_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        incra: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn VZPACKI_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        incra: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcpacki_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        incra: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzpacki_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        incra: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcPackI(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        incra: ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzPackI(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        incra: ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn VSPACKV_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        ia: *const ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn VDPACKV_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        ia: *const ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn vspackv_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        ia: *const ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn vdpackv_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        ia: *const ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn vsPackV(
        n: ::std::os::raw::c_int,
        a: *const f32,
        ia: *const ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn vdPackV(
        n: ::std::os::raw::c_int,
        a: *const f64,
        ia: *const ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn VCPACKV_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        ia: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn VZPACKV_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        ia: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcpackv_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        ia: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzpackv_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        ia: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcPackV(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        ia: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzPackV(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        ia: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn VSPACKM_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        ma: *const ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn VDPACKM_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        ma: *const ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn vspackm_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        ma: *const ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn vdpackm_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        ma: *const ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn vsPackM(
        n: ::std::os::raw::c_int,
        a: *const f32,
        ma: *const ::std::os::raw::c_int,
        y: *mut f32,
    );
}
extern "C" {
    pub fn vdPackM(
        n: ::std::os::raw::c_int,
        a: *const f64,
        ma: *const ::std::os::raw::c_int,
        y: *mut f64,
    );
}
extern "C" {
    pub fn VCPACKM_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        ma: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn VZPACKM_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        ma: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcpackm_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        ma: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzpackm_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        ma: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn vcPackM(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        ma: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex8,
    );
}
extern "C" {
    pub fn vzPackM(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        ma: *const ::std::os::raw::c_int,
        y: *mut MKL_Complex16,
    );
}
extern "C" {
    pub fn VSUNPACKI_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        y: *mut f32,
        incry: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn VDUNPACKI_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        y: *mut f64,
        incry: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vsunpacki_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        y: *mut f32,
        incry: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vdunpacki_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        y: *mut f64,
        incry: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vsUnpackI(
        n: ::std::os::raw::c_int,
        a: *const f32,
        y: *mut f32,
        incry: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vdUnpackI(
        n: ::std::os::raw::c_int,
        a: *const f64,
        y: *mut f64,
        incry: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn VCUNPACKI_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incry: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn VZUNPACKI_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incry: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vcunpacki_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incry: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vzunpacki_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incry: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vcUnpackI(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        incry: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vzUnpackI(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        incry: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn VSUNPACKV_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        y: *mut f32,
        iy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn VDUNPACKV_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        y: *mut f64,
        iy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vsunpackv_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        y: *mut f32,
        iy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vdunpackv_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        y: *mut f64,
        iy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vsUnpackV(
        n: ::std::os::raw::c_int,
        a: *const f32,
        y: *mut f32,
        iy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vdUnpackV(
        n: ::std::os::raw::c_int,
        a: *const f64,
        y: *mut f64,
        iy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn VCUNPACKV_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        iy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn VZUNPACKV_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        iy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vcunpackv_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        iy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vzunpackv_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        iy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vcUnpackV(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        iy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vzUnpackV(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        iy: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn VSUNPACKM_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        y: *mut f32,
        my: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn VDUNPACKM_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        y: *mut f64,
        my: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vsunpackm_(
        n: *const ::std::os::raw::c_int,
        a: *const f32,
        y: *mut f32,
        my: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vdunpackm_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        y: *mut f64,
        my: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vsUnpackM(
        n: ::std::os::raw::c_int,
        a: *const f32,
        y: *mut f32,
        my: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vdUnpackM(
        n: ::std::os::raw::c_int,
        a: *const f64,
        y: *mut f64,
        my: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn VCUNPACKM_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        my: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn VZUNPACKM_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        my: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vcunpackm_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        my: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vzunpackm_(
        n: *const ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        my: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vcUnpackM(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex8,
        y: *mut MKL_Complex8,
        my: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vzUnpackM(
        n: ::std::os::raw::c_int,
        a: *const MKL_Complex16,
        y: *mut MKL_Complex16,
        my: *const ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn VMLSETERRSTATUS_(status: *const ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vmlseterrstatus_(status: *const ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vmlSetErrStatus(status: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VMLGETERRSTATUS_() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vmlgeterrstatus_() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vmlGetErrStatus() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VMLCLEARERRSTATUS_() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vmlclearerrstatus_() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vmlClearErrStatus() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VMLSETERRORCALLBACK_(func: VMLErrorCallBack) -> VMLErrorCallBack;
}
extern "C" {
    pub fn vmlseterrorcallback_(func: VMLErrorCallBack) -> VMLErrorCallBack;
}
extern "C" {
    pub fn vmlSetErrorCallBack(func: VMLErrorCallBack) -> VMLErrorCallBack;
}
extern "C" {
    pub fn VMLGETERRORCALLBACK_() -> VMLErrorCallBack;
}
extern "C" {
    pub fn vmlgeterrorcallback_() -> VMLErrorCallBack;
}
extern "C" {
    pub fn vmlGetErrorCallBack() -> VMLErrorCallBack;
}
extern "C" {
    pub fn VMLCLEARERRORCALLBACK_() -> VMLErrorCallBack;
}
extern "C" {
    pub fn vmlclearerrorcallback_() -> VMLErrorCallBack;
}
extern "C" {
    pub fn vmlClearErrorCallBack() -> VMLErrorCallBack;
}
extern "C" {
    pub fn VMLSETMODE_(newmode: *const ::std::os::raw::c_uint) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn vmlsetmode_(newmode: *const ::std::os::raw::c_uint) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn vmlSetMode(newmode: ::std::os::raw::c_uint) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn VMLGETMODE_() -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn vmlgetmode_() -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn vmlGetMode() -> ::std::os::raw::c_uint;
}
pub type VSLStreamStatePtr = *mut ::core::ffi::c_void;
pub type VSLConvTaskPtr = *mut ::core::ffi::c_void;
pub type VSLCorrTaskPtr = *mut ::core::ffi::c_void;
pub type VSLSSTaskPtr = *mut ::core::ffi::c_void;
pub type InitStreamPtr = ::core::option::Option<
    unsafe extern "C" fn(
        method: ::std::os::raw::c_int,
        stream: VSLStreamStatePtr,
        n: ::std::os::raw::c_int,
        params: *const ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int,
>;
pub type sBRngPtr = ::core::option::Option<
    unsafe extern "C" fn(
        stream: VSLStreamStatePtr,
        n: ::std::os::raw::c_int,
        r: *mut f32,
        a: f32,
        b: f32,
    ) -> ::std::os::raw::c_int,
>;
pub type dBRngPtr = ::core::option::Option<
    unsafe extern "C" fn(
        stream: VSLStreamStatePtr,
        n: ::std::os::raw::c_int,
        r: *mut f64,
        a: f64,
        b: f64,
    ) -> ::std::os::raw::c_int,
>;
pub type iBRngPtr = ::core::option::Option<
    unsafe extern "C" fn(
        stream: VSLStreamStatePtr,
        n: ::std::os::raw::c_int,
        r: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int,
>;
#[doc = " Pointers to callback functions for abstract streams"]
pub type iUpdateFuncPtr = ::core::option::Option<
    unsafe extern "C" fn(
        stream: VSLStreamStatePtr,
        n: *mut ::std::os::raw::c_int,
        ibuf: *mut ::std::os::raw::c_uint,
        nmin: *mut ::std::os::raw::c_int,
        nmax: *mut ::std::os::raw::c_int,
        idx: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int,
>;
pub type dUpdateFuncPtr = ::core::option::Option<
    unsafe extern "C" fn(
        stream: VSLStreamStatePtr,
        n: *mut ::std::os::raw::c_int,
        dbuf: *mut f64,
        nmin: *mut ::std::os::raw::c_int,
        nmax: *mut ::std::os::raw::c_int,
        idx: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int,
>;
pub type sUpdateFuncPtr = ::core::option::Option<
    unsafe extern "C" fn(
        stream: VSLStreamStatePtr,
        n: *mut ::std::os::raw::c_int,
        sbuf: *mut f32,
        nmin: *mut ::std::os::raw::c_int,
        nmax: *mut ::std::os::raw::c_int,
        idx: *mut ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int,
>;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]
pub struct _VSLBRngProperties {
    pub StreamStateSize: ::std::os::raw::c_int,
    pub NSeeds: ::std::os::raw::c_int,
    pub IncludesZero: ::std::os::raw::c_int,
    pub WordSize: ::std::os::raw::c_int,
    pub NBits: ::std::os::raw::c_int,
    pub InitStream: InitStreamPtr,
    pub sBRng: sBRngPtr,
    pub dBRng: dBRngPtr,
    pub iBRng: iBRngPtr,
}
#[test]
fn bindgen_test_layout__VSLBRngProperties() {
    assert_eq!(
        ::core::mem::size_of::<_VSLBRngProperties>(),
        56usize,
        concat!("Size of: ", stringify!(_VSLBRngProperties))
    );
    assert_eq!(
        ::core::mem::align_of::<_VSLBRngProperties>(),
        8usize,
        concat!("Alignment of ", stringify!(_VSLBRngProperties))
    );
    assert_eq!(
        unsafe {
            &(*(::core::ptr::null::<_VSLBRngProperties>())).StreamStateSize as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_VSLBRngProperties),
            "::",
            stringify!(StreamStateSize)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_VSLBRngProperties>())).NSeeds as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(_VSLBRngProperties),
            "::",
            stringify!(NSeeds)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::core::ptr::null::<_VSLBRngProperties>())).IncludesZero as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_VSLBRngProperties),
            "::",
            stringify!(IncludesZero)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_VSLBRngProperties>())).WordSize as *const _ as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(_VSLBRngProperties),
            "::",
            stringify!(WordSize)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_VSLBRngProperties>())).NBits as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_VSLBRngProperties),
            "::",
            stringify!(NBits)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_VSLBRngProperties>())).InitStream as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(_VSLBRngProperties),
            "::",
            stringify!(InitStream)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_VSLBRngProperties>())).sBRng as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(_VSLBRngProperties),
            "::",
            stringify!(sBRng)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_VSLBRngProperties>())).dBRng as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(_VSLBRngProperties),
            "::",
            stringify!(dBRng)
        )
    );
    assert_eq!(
        unsafe { &(*(::core::ptr::null::<_VSLBRngProperties>())).iBRng as *const _ as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(_VSLBRngProperties),
            "::",
            stringify!(iBRng)
        )
    );
}
pub type VSLBRngProperties = _VSLBRngProperties;
extern "C" {
    pub fn vdRngCauchy(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: f64,
        arg6: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGCAUCHY_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrngcauchy_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngCauchy(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: f32,
        arg6: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGCAUCHY_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrngcauchy_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdRngUniform(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: f64,
        arg6: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGUNIFORM_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrnguniform_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngUniform(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: f32,
        arg6: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGUNIFORM_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrnguniform_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdRngGaussian(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: f64,
        arg6: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGGAUSSIAN_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrnggaussian_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngGaussian(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: f32,
        arg6: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGGAUSSIAN_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrnggaussian_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdRngGaussianMV(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: ::std::os::raw::c_int,
        arg6: ::std::os::raw::c_int,
        arg7: *const f64,
        arg8: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGGAUSSIANMV_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
        arg8: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrnggaussianmv_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
        arg8: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngGaussianMV(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: ::std::os::raw::c_int,
        arg6: ::std::os::raw::c_int,
        arg7: *const f32,
        arg8: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGGAUSSIANMV_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f32,
        arg8: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrnggaussianmv_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f32,
        arg8: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdRngExponential(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: f64,
        arg6: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGEXPONENTIAL_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrngexponential_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngExponential(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: f32,
        arg6: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGEXPONENTIAL_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrngexponential_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdRngLaplace(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: f64,
        arg6: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGLAPLACE_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrnglaplace_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngLaplace(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: f32,
        arg6: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGLAPLACE_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrnglaplace_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdRngWeibull(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: f64,
        arg6: f64,
        arg7: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGWEIBULL_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
        arg7: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrngweibull_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
        arg7: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngWeibull(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: f32,
        arg6: f32,
        arg7: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGWEIBULL_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
        arg7: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrngweibull_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
        arg7: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdRngRayleigh(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: f64,
        arg6: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGRAYLEIGH_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrngrayleigh_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngRayleigh(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: f32,
        arg6: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGRAYLEIGH_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrngrayleigh_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdRngLognormal(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: f64,
        arg6: f64,
        arg7: f64,
        arg8: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGLOGNORMAL_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
        arg7: *const f64,
        arg8: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrnglognormal_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
        arg7: *const f64,
        arg8: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngLognormal(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: f32,
        arg6: f32,
        arg7: f32,
        arg8: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGLOGNORMAL_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
        arg7: *const f32,
        arg8: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrnglognormal_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
        arg7: *const f32,
        arg8: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdRngGumbel(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: f64,
        arg6: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGGUMBEL_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrnggumbel_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngGumbel(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: f32,
        arg6: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGGUMBEL_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrnggumbel_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdRngGamma(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: f64,
        arg6: f64,
        arg7: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGGAMMA_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
        arg7: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrnggamma_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
        arg7: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngGamma(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: f32,
        arg6: f32,
        arg7: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGGAMMA_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
        arg7: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrnggamma_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
        arg7: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdRngBeta(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: f64,
        arg6: f64,
        arg7: f64,
        arg8: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGBETA_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
        arg7: *const f64,
        arg8: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrngbeta_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const f64,
        arg6: *const f64,
        arg7: *const f64,
        arg8: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngBeta(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: f32,
        arg6: f32,
        arg7: f32,
        arg8: f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGBETA_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
        arg7: *const f32,
        arg8: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrngbeta_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const f32,
        arg6: *const f32,
        arg7: *const f32,
        arg8: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdRngChiSquare(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VDRNGCHISQUARE_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vdrngchisquare_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsRngChiSquare(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSRNGCHISQUARE_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsrngchisquare_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngBernoulli(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VIRNGBERNOULLI_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn virngbernoulli_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngUniform(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
        arg6: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VIRNGUNIFORM_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn virnguniform_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngUniformBits(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VIRNGUNIFORMBITS_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn virnguniformbits_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngUniformBits32(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VIRNGUNIFORMBITS32_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn virnguniformbits32_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngUniformBits64(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_ulonglong,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VIRNGUNIFORMBITS64_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_ulonglong,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn virnguniformbits64_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_ulonglong,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngGeometric(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VIRNGGEOMETRIC_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn virnggeometric_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngBinomial(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
        arg6: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VIRNGBINOMIAL_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn virngbinomial_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngMultinomial(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
        arg6: ::std::os::raw::c_int,
        arg7: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VIRNGMULTINOMIAL_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn virngmultinomial_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngHypergeometric(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
        arg6: ::std::os::raw::c_int,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VIRNGHYPERGEOMETRIC_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn virnghypergeometric_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngNegbinomial(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: f64,
        arg6: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngNegBinomial(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: f64,
        arg6: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VIRNGNEGBINOMIAL_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn virngnegbinomial_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const f64,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngPoisson(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VIRNGPOISSON_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn virngpoisson_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn viRngPoissonV(
        arg1: ::std::os::raw::c_int,
        arg2: VSLStreamStatePtr,
        arg3: ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VIRNGPOISSONV_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn virngpoissonv_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLStreamStatePtr,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut ::std::os::raw::c_int,
        arg5: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslNewStream(
        arg1: *mut VSLStreamStatePtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslnewstream_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLNEWSTREAM_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslNewStreamEx(
        arg1: *mut VSLStreamStatePtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslnewstreamex_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLNEWSTREAMEX_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsliNewAbstractStream(
        arg1: *mut VSLStreamStatePtr,
        arg2: ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_uint,
        arg4: iUpdateFuncPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslinewabstractstream_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_uint,
        arg4: iUpdateFuncPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLINEWABSTRACTSTREAM_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_uint,
        arg4: iUpdateFuncPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldNewAbstractStream(
        arg1: *mut VSLStreamStatePtr,
        arg2: ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: f64,
        arg5: f64,
        arg6: dUpdateFuncPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldnewabstractstream_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *const f64,
        arg5: *const f64,
        arg6: dUpdateFuncPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDNEWABSTRACTSTREAM_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *const f64,
        arg5: *const f64,
        arg6: dUpdateFuncPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsNewAbstractStream(
        arg1: *mut VSLStreamStatePtr,
        arg2: ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: f32,
        arg5: f32,
        arg6: sUpdateFuncPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsnewabstractstream_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *const f32,
        arg5: *const f32,
        arg6: sUpdateFuncPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSNEWABSTRACTSTREAM_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *const f32,
        arg5: *const f32,
        arg6: sUpdateFuncPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslDeleteStream(arg1: *mut VSLStreamStatePtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldeletestream_(arg1: *mut VSLStreamStatePtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDELETESTREAM_(arg1: *mut VSLStreamStatePtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslCopyStream(
        arg1: *mut VSLStreamStatePtr,
        arg2: VSLStreamStatePtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcopystream_(
        arg1: *mut VSLStreamStatePtr,
        arg2: VSLStreamStatePtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCOPYSTREAM_(
        arg1: *mut VSLStreamStatePtr,
        arg2: VSLStreamStatePtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslCopyStreamState(
        arg1: VSLStreamStatePtr,
        arg2: VSLStreamStatePtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcopystreamstate_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const VSLStreamStatePtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCOPYSTREAMSTATE_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const VSLStreamStatePtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslLeapfrogStream(
        arg1: VSLStreamStatePtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslleapfrogstream_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLLEAPFROGSTREAM_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslSkipAheadStream(
        arg1: VSLStreamStatePtr,
        arg2: ::std::os::raw::c_longlong,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslskipaheadstream_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_longlong,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSKIPAHEADSTREAM_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_longlong,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslGetStreamStateBrng(arg1: VSLStreamStatePtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslgetstreamstatebrng_(arg1: *const VSLStreamStatePtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLGETSTREAMSTATEBRNG_(arg1: *const VSLStreamStatePtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslGetNumRegBrngs() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslgetnumregbrngs_() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLGETNUMREGBRNGS_() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslRegisterBrng(arg1: *const VSLBRngProperties) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslregisterbrng_(arg1: *const VSLBRngProperties) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLREGISTERBRNG_(arg1: *const VSLBRngProperties) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslGetBrngProperties(
        arg1: ::std::os::raw::c_int,
        arg2: *mut VSLBRngProperties,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslgetbrngproperties_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLBRngProperties,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLGETBRNGPROPERTIES_(
        arg1: *const ::std::os::raw::c_int,
        arg2: *mut VSLBRngProperties,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslSaveStreamF(
        arg1: VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsavestreamf_(
        arg1: *const VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_char,
        arg3: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSAVESTREAMF_(
        arg1: *const VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_char,
        arg3: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslLoadStreamF(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslloadstreamf_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_char,
        arg3: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLLOADSTREAMF_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_char,
        arg3: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslSaveStreamM(
        arg1: VSLStreamStatePtr,
        arg2: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsavestreamm_(
        arg1: *const VSLStreamStatePtr,
        arg2: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSAVESTREAMM_(
        arg1: *const VSLStreamStatePtr,
        arg2: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslLoadStreamM(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslloadstreamm_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLLOADSTREAMM_(
        arg1: *mut VSLStreamStatePtr,
        arg2: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslGetStreamSize(arg1: VSLStreamStatePtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslgetstreamsize_(arg1: VSLStreamStatePtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLGETSTREAMSIZE_(arg1: VSLStreamStatePtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldConvNewTask(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldconvnewtask_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCONVNEWTASK_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsConvNewTask(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsconvnewtask_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCONVNEWTASK_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzConvNewTask(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzconvnewtask_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCONVNEWTASK_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcConvNewTask(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcconvnewtask_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCONVNEWTASK_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldCorrNewTask(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldcorrnewtask_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCORRNEWTASK_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsCorrNewTask(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslscorrnewtask_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCORRNEWTASK_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzCorrNewTask(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzcorrnewtask_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCORRNEWTASK_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcCorrNewTask(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslccorrnewtask_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCORRNEWTASK_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldConvNewTask1D(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldconvnewtask1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCONVNEWTASK1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsConvNewTask1D(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsconvnewtask1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCONVNEWTASK1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzConvNewTask1D(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzconvnewtask1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCONVNEWTASK1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcConvNewTask1D(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcconvnewtask1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCONVNEWTASK1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldCorrNewTask1D(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldcorrnewtask1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCORRNEWTASK1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsCorrNewTask1D(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslscorrnewtask1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCORRNEWTASK1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzCorrNewTask1D(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzcorrnewtask1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCORRNEWTASK1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcCorrNewTask1D(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslccorrnewtask1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCORRNEWTASK1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldConvNewTaskX(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldconvnewtaskx_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCONVNEWTASKX_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsConvNewTaskX(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f32,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsconvnewtaskx_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f32,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCONVNEWTASKX_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f32,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzConvNewTaskX(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const MKL_Complex16,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzconvnewtaskx_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const MKL_Complex16,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCONVNEWTASKX_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const MKL_Complex16,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcConvNewTaskX(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const MKL_Complex8,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcconvnewtaskx_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const MKL_Complex8,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCONVNEWTASKX_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const MKL_Complex8,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldCorrNewTaskX(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldcorrnewtaskx_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCORRNEWTASKX_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsCorrNewTaskX(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f32,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslscorrnewtaskx_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f32,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCORRNEWTASKX_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f32,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzCorrNewTaskX(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const MKL_Complex16,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzcorrnewtaskx_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const MKL_Complex16,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCORRNEWTASKX_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const MKL_Complex16,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcCorrNewTaskX(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const MKL_Complex8,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslccorrnewtaskx_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const MKL_Complex8,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCORRNEWTASKX_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const MKL_Complex8,
        arg8: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldConvNewTaskX1D(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
        arg6: *const f64,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldconvnewtaskx1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCONVNEWTASKX1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsConvNewTaskX1D(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
        arg6: *const f32,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsconvnewtaskx1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCONVNEWTASKX1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzConvNewTaskX1D(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
        arg6: *const MKL_Complex16,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzconvnewtaskx1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCONVNEWTASKX1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcConvNewTaskX1D(
        arg1: *mut VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
        arg6: *const MKL_Complex8,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcconvnewtaskx1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCONVNEWTASKX1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldCorrNewTaskX1D(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
        arg6: *const f64,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldcorrnewtaskx1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCORRNEWTASKX1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsCorrNewTaskX1D(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
        arg6: *const f32,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslscorrnewtaskx1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCORRNEWTASKX1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzCorrNewTaskX1D(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
        arg6: *const MKL_Complex16,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzcorrnewtaskx1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCORRNEWTASKX1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcCorrNewTaskX1D(
        arg1: *mut VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: ::std::os::raw::c_int,
        arg4: ::std::os::raw::c_int,
        arg5: ::std::os::raw::c_int,
        arg6: *const MKL_Complex8,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslccorrnewtaskx1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCORRNEWTASKX1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslConvDeleteTask(arg1: *mut VSLConvTaskPtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslconvdeletetask_(arg1: *mut VSLConvTaskPtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCONVDeleteTask_(arg1: *mut VSLConvTaskPtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslCorrDeleteTask(arg1: *mut VSLCorrTaskPtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcorrdeletetask_(arg1: *mut VSLCorrTaskPtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCORRDeleteTask_(arg1: *mut VSLCorrTaskPtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslConvCopyTask(
        arg1: *mut VSLConvTaskPtr,
        arg2: VSLConvTaskPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslconvcopytask_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const VSLConvTaskPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCONVCopyTask_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const VSLConvTaskPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslCorrCopyTask(
        arg1: *mut VSLCorrTaskPtr,
        arg2: VSLCorrTaskPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcorrcopytask_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const VSLCorrTaskPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCORRCopyTask_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const VSLCorrTaskPtr,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslConvSetMode(
        arg1: VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslconvsetmode_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCONVSETMODE_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslCorrSetMode(
        arg1: VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcorrsetmode_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCORRSETMODE_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslConvSetInternalPrecision(
        arg1: VSLConvTaskPtr,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslconvsetinternalprecision_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCONVSETINTERNALPRECISION_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslCorrSetInternalPrecision(
        arg1: VSLCorrTaskPtr,
        arg2: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcorrsetinternalprecision_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCORRSETINTERNALPRECISION_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslConvSetStart(
        arg1: VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslconvsetstart_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCONVSETSTART_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslCorrSetStart(
        arg1: VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcorrsetstart_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCORRSETSTART_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslConvSetDecimation(
        arg1: VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslconvsetdecimation_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCONVSETDECIMATION_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslCorrSetDecimation(
        arg1: VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcorrsetdecimation_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCORRSETDECIMATION_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldConvExec(
        arg1: VSLConvTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldconvexec_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCONVEXEC_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsConvExec(
        arg1: VSLConvTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsconvexec_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCONVEXEC_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzConvExec(
        arg1: VSLConvTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzconvexec_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCONVEXEC_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcConvExec(
        arg1: VSLConvTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcconvexec_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCONVEXEC_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldCorrExec(
        arg1: VSLCorrTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldcorrexec_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCORREXEC_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsCorrExec(
        arg1: VSLCorrTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslscorrexec_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCORREXEC_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzCorrExec(
        arg1: VSLCorrTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzcorrexec_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCORREXEC_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcCorrExec(
        arg1: VSLCorrTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslccorrexec_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCORREXEC_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldConvExec1D(
        arg1: VSLConvTaskPtr,
        arg2: *const f64,
        arg3: ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldconvexec1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCONVEXEC1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsConvExec1D(
        arg1: VSLConvTaskPtr,
        arg2: *const f32,
        arg3: ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsconvexec1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCONVEXEC1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzConvExec1D(
        arg1: VSLConvTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: ::std::os::raw::c_int,
        arg4: *const MKL_Complex16,
        arg5: ::std::os::raw::c_int,
        arg6: *mut MKL_Complex16,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzconvexec1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCONVEXEC1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcConvExec1D(
        arg1: VSLConvTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: ::std::os::raw::c_int,
        arg4: *const MKL_Complex8,
        arg5: ::std::os::raw::c_int,
        arg6: *mut MKL_Complex8,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcconvexec1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCONVEXEC1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldCorrExec1D(
        arg1: VSLCorrTaskPtr,
        arg2: *const f64,
        arg3: ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldcorrexec1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCORREXEC1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsCorrExec1D(
        arg1: VSLCorrTaskPtr,
        arg2: *const f32,
        arg3: ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslscorrexec1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCORREXEC1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzCorrExec1D(
        arg1: VSLCorrTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: ::std::os::raw::c_int,
        arg4: *const MKL_Complex16,
        arg5: ::std::os::raw::c_int,
        arg6: *mut MKL_Complex16,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzcorrexec1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCORREXEC1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex16,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcCorrExec1D(
        arg1: VSLCorrTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: ::std::os::raw::c_int,
        arg4: *const MKL_Complex8,
        arg5: ::std::os::raw::c_int,
        arg6: *mut MKL_Complex8,
        arg7: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslccorrexec1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCORREXEC1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut MKL_Complex8,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldConvExecX(
        arg1: VSLConvTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldconvexecx_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCONVEXECX_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsConvExecX(
        arg1: VSLConvTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsconvexecx_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCONVEXECX_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzConvExecX(
        arg1: VSLConvTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzconvexecx_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCONVEXECX_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcConvExecX(
        arg1: VSLConvTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcconvexecx_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCONVEXECX_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldCorrExecX(
        arg1: VSLCorrTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldcorrexecx_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCORREXECX_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsCorrExecX(
        arg1: VSLCorrTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslscorrexecx_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCORREXECX_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzCorrExecX(
        arg1: VSLCorrTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzcorrexecx_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCORREXECX_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcCorrExecX(
        arg1: VSLCorrTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslccorrexecx_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCORREXECX_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldConvExecX1D(
        arg1: VSLConvTaskPtr,
        arg2: *const f64,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldconvexecx1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCONVEXECX1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsConvExecX1D(
        arg1: VSLConvTaskPtr,
        arg2: *const f32,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsconvexecx1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCONVEXECX1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzConvExecX1D(
        arg1: VSLConvTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: ::std::os::raw::c_int,
        arg4: *mut MKL_Complex16,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzconvexecx1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCONVEXECX1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcConvExecX1D(
        arg1: VSLConvTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: ::std::os::raw::c_int,
        arg4: *mut MKL_Complex8,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcconvexecx1d_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCONVEXECX1D_(
        arg1: *mut VSLConvTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldCorrExecX1D(
        arg1: VSLCorrTaskPtr,
        arg2: *const f64,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldcorrexecx1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDCORREXECX1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsCorrExecX1D(
        arg1: VSLCorrTaskPtr,
        arg2: *const f32,
        arg3: ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslscorrexecx1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSCORREXECX1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzCorrExecX1D(
        arg1: VSLCorrTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: ::std::os::raw::c_int,
        arg4: *mut MKL_Complex16,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslzcorrexecx1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLZCORREXECX1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex16,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex16,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslcCorrExecX1D(
        arg1: VSLCorrTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: ::std::os::raw::c_int,
        arg4: *mut MKL_Complex8,
        arg5: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslccorrexecx1d_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLCCORREXECX1D_(
        arg1: *mut VSLCorrTaskPtr,
        arg2: *const MKL_Complex8,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut MKL_Complex8,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSNewTask(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f64,
        arg6: *const f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldssnewtask_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f64,
        arg6: *const f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSNEWTASK_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f64,
        arg6: *const f64,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSNewTask(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f32,
        arg6: *const f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsssnewtask_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f32,
        arg6: *const f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSNEWTASK_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f32,
        arg6: *const f32,
        arg7: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditTask(
        arg1: VSLSSTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldssedittask_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITTASK_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditTask(
        arg1: VSLSSTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsssedittask_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITTASK_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsliSSEditTask(
        arg1: VSLSSTaskPtr,
        arg2: ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslissedittask_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLISSEDITTASK_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditMoments(
        arg1: VSLSSTaskPtr,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *mut f64,
        arg5: *mut f64,
        arg6: *mut f64,
        arg7: *mut f64,
        arg8: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsseditmoments_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *mut f64,
        arg5: *mut f64,
        arg6: *mut f64,
        arg7: *mut f64,
        arg8: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITMOMENTS_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *mut f64,
        arg5: *mut f64,
        arg6: *mut f64,
        arg7: *mut f64,
        arg8: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditMoments(
        arg1: VSLSSTaskPtr,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *mut f32,
        arg5: *mut f32,
        arg6: *mut f32,
        arg7: *mut f32,
        arg8: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssseditmoments_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *mut f32,
        arg5: *mut f32,
        arg6: *mut f32,
        arg7: *mut f32,
        arg8: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITMOMENTS_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *mut f32,
        arg5: *mut f32,
        arg6: *mut f32,
        arg7: *mut f32,
        arg8: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditSums(
        arg1: VSLSSTaskPtr,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *mut f64,
        arg5: *mut f64,
        arg6: *mut f64,
        arg7: *mut f64,
        arg8: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsseditsums_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *mut f64,
        arg5: *mut f64,
        arg6: *mut f64,
        arg7: *mut f64,
        arg8: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITSUMS_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *mut f64,
        arg5: *mut f64,
        arg6: *mut f64,
        arg7: *mut f64,
        arg8: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditSums(
        arg1: VSLSSTaskPtr,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *mut f32,
        arg5: *mut f32,
        arg6: *mut f32,
        arg7: *mut f32,
        arg8: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssseditsums_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *mut f32,
        arg5: *mut f32,
        arg6: *mut f32,
        arg7: *mut f32,
        arg8: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITSUMS_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *mut f32,
        arg5: *mut f32,
        arg6: *mut f32,
        arg7: *mut f32,
        arg8: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditCovCor(
        arg1: VSLSSTaskPtr,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *const ::std::os::raw::c_int,
        arg5: *mut f64,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsseditcovcor_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *const ::std::os::raw::c_int,
        arg5: *mut f64,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITCOVCOR_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *const ::std::os::raw::c_int,
        arg5: *mut f64,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditCovCor(
        arg1: VSLSSTaskPtr,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *const ::std::os::raw::c_int,
        arg5: *mut f32,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssseditcovcor_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *const ::std::os::raw::c_int,
        arg5: *mut f32,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITCOVCOR_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *const ::std::os::raw::c_int,
        arg5: *mut f32,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditCP(
        arg1: VSLSSTaskPtr,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsseditcp_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITCP_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f64,
        arg3: *mut f64,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditCP(
        arg1: VSLSSTaskPtr,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssseditcp_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITCP_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditPartialCovCor(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f64,
        arg6: *const ::std::os::raw::c_int,
        arg7: *mut f64,
        arg8: *const ::std::os::raw::c_int,
        arg9: *mut f64,
        arg10: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsseditpartialcovcor_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f64,
        arg6: *const ::std::os::raw::c_int,
        arg7: *mut f64,
        arg8: *const ::std::os::raw::c_int,
        arg9: *mut f64,
        arg10: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITPARTIALCOVCOR_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f64,
        arg6: *const ::std::os::raw::c_int,
        arg7: *mut f64,
        arg8: *const ::std::os::raw::c_int,
        arg9: *mut f64,
        arg10: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditPartialCovCor(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f32,
        arg6: *const ::std::os::raw::c_int,
        arg7: *mut f32,
        arg8: *const ::std::os::raw::c_int,
        arg9: *mut f32,
        arg10: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssseditpartialcovcor_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f32,
        arg6: *const ::std::os::raw::c_int,
        arg7: *mut f32,
        arg8: *const ::std::os::raw::c_int,
        arg9: *mut f32,
        arg10: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITPARTIALCOVCOR_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f32,
        arg6: *const ::std::os::raw::c_int,
        arg7: *mut f32,
        arg8: *const ::std::os::raw::c_int,
        arg9: *mut f32,
        arg10: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditQuantiles(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *mut f64,
        arg5: *mut f64,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsseditquantiles_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *mut f64,
        arg5: *mut f64,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITQUANTILES_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *mut f64,
        arg5: *mut f64,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditQuantiles(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *mut f32,
        arg5: *mut f32,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssseditquantiles_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *mut f32,
        arg5: *mut f32,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITQUANTILES_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *mut f32,
        arg5: *mut f32,
        arg6: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditStreamQuantiles(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsseditstreamquantiles_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITSTREAMQUANTILES_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditStreamQuantiles(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssseditstreamquantiles_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITSTREAMQUANTILES_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *const f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditPooledCovariance(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *mut f64,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsseditpooledcovariance_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *mut f64,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITPOOLEDCOVARIANCE_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *mut f64,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f64,
        arg7: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditPooledCovariance(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *mut f32,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssseditpooledcovariance_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *mut f32,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITPOOLEDCOVARIANCE_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *mut f32,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
        arg6: *mut f32,
        arg7: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditRobustCovariance(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *mut f64,
        arg6: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsseditrobustcovariance_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *mut f64,
        arg6: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITROBUSTCOVARIANCE_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f64,
        arg5: *mut f64,
        arg6: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditRobustCovariance(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *mut f32,
        arg6: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssseditrobustcovariance_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *mut f32,
        arg6: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITROBUSTCOVARIANCE_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const ::std::os::raw::c_int,
        arg4: *const f32,
        arg5: *mut f32,
        arg6: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditOutliersDetection(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsseditoutliersdetection_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITOUTLIERSDETECTION_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditOutliersDetection(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssseditoutliersdetection_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITOUTLIERSDETECTION_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditMissingValues(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f64,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
        arg8: *const ::std::os::raw::c_int,
        arg9: *mut f64,
        arg10: *const ::std::os::raw::c_int,
        arg11: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsseditmissingvalues_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f64,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
        arg8: *const ::std::os::raw::c_int,
        arg9: *mut f64,
        arg10: *const ::std::os::raw::c_int,
        arg11: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITMISSINGVALUES_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f64,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f64,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f64,
        arg8: *const ::std::os::raw::c_int,
        arg9: *mut f64,
        arg10: *const ::std::os::raw::c_int,
        arg11: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditMissingValues(
        arg1: VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f32,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f32,
        arg8: *const ::std::os::raw::c_int,
        arg9: *mut f32,
        arg10: *const ::std::os::raw::c_int,
        arg11: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssseditmissingvalues_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f32,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f32,
        arg8: *const ::std::os::raw::c_int,
        arg9: *mut f32,
        arg10: *const ::std::os::raw::c_int,
        arg11: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITMISSINGVALUES_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_int,
        arg3: *const f32,
        arg4: *const ::std::os::raw::c_int,
        arg5: *const f32,
        arg6: *const ::std::os::raw::c_int,
        arg7: *const f32,
        arg8: *const ::std::os::raw::c_int,
        arg9: *mut f32,
        arg10: *const ::std::os::raw::c_int,
        arg11: *mut f32,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSEditCorParameterization(
        arg1: VSLSSTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsseditcorparameterization_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSEDITCORPARAMETERIZATION_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const f64,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f64,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSEditCorParameterization(
        arg1: VSLSSTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssseditcorparameterization_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSEDITCORPARAMETERIZATION_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const f32,
        arg3: *const ::std::os::raw::c_int,
        arg4: *mut f32,
        arg5: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldSSCompute(
        arg1: VSLSSTaskPtr,
        arg2: ::std::os::raw::c_ulonglong,
        arg3: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vsldsscompute_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_ulonglong,
        arg3: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLDSSCOMPUTE_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_ulonglong,
        arg3: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslsSSCompute(
        arg1: VSLSSTaskPtr,
        arg2: ::std::os::raw::c_ulonglong,
        arg3: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssscompute_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_ulonglong,
        arg3: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSSCOMPUTE_(
        arg1: *mut VSLSSTaskPtr,
        arg2: *const ::std::os::raw::c_ulonglong,
        arg3: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslSSDeleteTask(arg1: *mut VSLSSTaskPtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vslssdeletetask_(arg1: *mut VSLSSTaskPtr) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn VSLSSDELETETASK_(arg1: *mut VSLSSTaskPtr) -> ::std::os::raw::c_int;
}
