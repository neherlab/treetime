#!/usr/bin/env bash

# Usage: ./download-examples [DATE] [OUTPUT_BASE_DIR]
# DATE: Optional DATE in yyyy-MM-dd format (e.g., 2024-07-19). Default is root directory.
# OUTPUT_BASE_DIR: Optional directory to save FILES. Default is script's directory + "yyyy-MM-dd" if DATE is provided, or current directory if not.

set -euxo pipefail

THIS_DIR=$(
  cd "$(dirname "${BASH_SOURCE[0]}")"
  pwd
)
export THIS_DIR

DATE="${1:-}"
export OUTPUT_BASE_DIR="${2:-"${THIS_DIR}/usher"}"

if [[ -n $DATE && ! $DATE =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]]; then
    echo "Invalid DATE format. Use yyyy-MM-dd."
    exit 1
fi

if [ -n "$DATE" ]; then
  year=$(echo "$DATE" | cut -d- -f1)
  month=$(echo "$DATE" | cut -d- -f2)
  day=$(echo "$DATE" | cut -d- -f3)
  VERSION_SLASHED="$year/$month/$day/"
  VERSION_DASHED="$year-$month-$day"
else
  VERSION_SLASHED=""
  VERSION_DASHED="latest"
fi
export VERSION_SLASHED VERSION_DASHED OUTPUT_BASE_DIR
export BASE_URL="https://hgdownload.soe.ucsc.edu/goldenPath/wuhCor1/UShER_SARS-CoV-2/${VERSION_SLASHED}"
export OUTPUT_DIR="${OUTPUT_BASE_DIR}/${VERSION_DASHED}"

FILES=(
  "public-${VERSION_DASHED}.all.masked.ShUShER.pb.gz"
  "public-${VERSION_DASHED}.all.masked.msa.pb.gz"
  "public-${VERSION_DASHED}.all.masked.pb.gz"
  "public-${VERSION_DASHED}.all.masked.taxonium.jsonl.gz"
  "public-${VERSION_DASHED}.all.masked.vcf.gz"
  "public-${VERSION_DASHED}.all.msa.fa.xz"
  "public-${VERSION_DASHED}.all.nwk.gz"
  "public-${VERSION_DASHED}.all.masked.msa.nwk.gz"
  "public-${VERSION_DASHED}.metadata.tsv.gz"
  "public-${VERSION_DASHED}.version.txt"
)

mkdir -p "${OUTPUT_BASE_DIR}/${VERSION_DASHED}"

download_file() {
  set -euxo pipefail
  local FILE=$1

  if [ "${FILE}" == "public-latest.all.masked.msa.nwk.gz" ]; then
    FILE="public-latest.masked.msa.nwk.gz"
  fi

  curl -fsSL -o "${OUTPUT_DIR}/${FILE}" "${BASE_URL}${FILE}"
}
export -f download_file

parallel --jobs=+0 download_file ::: "${FILES[@]}"
