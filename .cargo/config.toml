[env]
DYNAMIC_ARCH = "1" # https://github.com/xianyi/OpenBLAS#support-for-multiple-targets-in-a-single-library=

[future-incompat-report]
frequency = 'always'

[profile.dev]
codegen-units = 4096
incremental = true
lto = "off"

# Optimize dependencies even in debug mode
[profile.dev.package."*"]
opt-level = 2
[profile.dev.package.backtrace]
opt-level = 3
[profile.dev.package.color-spantrace]
opt-level = 3
[profile.dev.package.tracing]
opt-level = 3
[profile.dev.package.tracing-error]
opt-level = 3
[profile.dev.package.tracing-subscriber]
opt-level = 3
[profile.dev.package.pretty_assertions]
opt-level = 3

[profile.release]
codegen-units = 1
incremental = false
lto = "fat"
opt-level = 3
panic = "abort"
strip = true

[profile.bench]
codegen-units = 1
incremental = false
lto = "fat"
opt-level = 3
strip = true

[profile.test]
debug = true

[profile.test.package."*"]
opt-level = 2
[profile.test.package.backtrace]
opt-level = 3
[profile.test.package.color-spantrace]
opt-level = 3
[profile.test.package.tracing]
opt-level = 3
[profile.test.package.tracing-error]
opt-level = 3
[profile.test.package.tracing-subscriber]
opt-level = 3
[profile.test.package.pretty_assertions]
opt-level = 3


[target.'cfg(all())']
rustflags = [
  #
  # Enable some of the default lints which are disabled by default
  "-Wdeprecated_in_future",
  "-Wfuture_incompatible",
  "-Wnonstandard_style",
  "-Wrust_2018_idioms",
  # "-Wtrivial_casts",
  "-Wtrivial_numeric_casts",
  # Enable all clippy lint groups
  # Order is important!
  "-Wclippy::all",
  "-Wclippy::pedantic",
  "-Aclippy::blanket_clippy_restriction_lints",
  "-Wclippy::restriction",
  "-Wclippy::nursery",
  #
  # Enable some of the clippy lints disabled by default
  "-Wclippy::await_holding_lock",
  "-Wclippy::char_lit_as_u8",
  "-Wclippy::checked_conversions",
  "-Wclippy::dbg_macro",
  "-Wclippy::debug_assert_with_mut_call",
  "-Wclippy::disallowed_script_idents",
  "-Wclippy::doc_markdown",
  "-Wclippy::empty_enum",
  "-Wclippy::enum_glob_use",
  "-Wclippy::equatable_if_let",
  "-Wclippy::exit",
  "-Wclippy::expl_impl_clone_on_copy",
  "-Wclippy::explicit_deref_methods",
  "-Wclippy::explicit_into_iter_loop",
  "-Wclippy::fallible_impl_from",
  "-Wclippy::filter_map_next",
  "-Wclippy::flat_map_option",
  "-Wclippy::float_cmp_const",
  "-Wclippy::fn_params_excessive_bools",
  "-Wclippy::fn_to_numeric_cast_any",
  "-Wclippy::from_iter_instead_of_collect",
  "-Wclippy::if_let_mutex",
  "-Wclippy::implicit_clone",
  "-Wclippy::imprecise_flops",
  "-Wclippy::index_refutable_slice",
  "-Wclippy::inefficient_to_string",
  "-Wclippy::invalid_upcast_comparisons",
  "-Wclippy::iter_not_returning_iterator",
  "-Wclippy::large_digit_groups",
  "-Wclippy::large_stack_arrays",
  "-Wclippy::large_types_passed_by_value",
  "-Wclippy::let_unit_value",
  "-Wclippy::linkedlist",
  "-Wclippy::lossy_float_literal",
  "-Wclippy::macro_use_imports",
  "-Wclippy::manual_ok_or",
  "-Wclippy::map_err_ignore",
  "-Wclippy::map_flatten",
  "-Wclippy::map_unwrap_or",
  "-Wclippy::match_on_vec_items",
  "-Wclippy::match_same_arms",
  "-Wclippy::match_wild_err_arm",
  "-Wclippy::match_wildcard_for_single_variants",
  "-Wclippy::mem_forget",
  "-Wclippy::mismatched_target_os",
  "-Wclippy::missing_enforced_import_renames",
  "-Wclippy::mut_mut",
  "-Wclippy::mutex_integer",
  "-Wclippy::needless_continue",
  "-Wclippy::needless_for_each",
  "-Wclippy::negative_feature_names",
  "-Wclippy::nonstandard_macro_braces",
  "-Wclippy::option_option",
  "-Wclippy::path_buf_push_overwrite",
  "-Wclippy::ptr_as_ptr",
  "-Wclippy::rc_mutex",
  "-Wclippy::ref_option_ref",
  "-Wclippy::rest_pat_in_fully_bound_structs",
  "-Wclippy::same_functions_in_if_condition",
  "-Wclippy::semicolon_if_nothing_returned",
  "-Wclippy::single_match_else",
  "-Wclippy::string_add",
  "-Wclippy::string_add_assign",
  "-Wclippy::string_lit_as_bytes",
  "-Wclippy::string_to_string",
  "-Wclippy::trailing_empty_array",
  "-Wclippy::trait_duplication_in_bounds",
  "-Wclippy::unimplemented",
  "-Wclippy::unnecessary_wraps",
  "-Wclippy::unnested_or_patterns",
  "-Wclippy::useless_transmute",
  "-Wclippy::verbose_file_reads",
  "-Wclippy::zero_sized_map_values",
  #
  # Disable some of the clippy lints
  "-Aclippy::as_conversions",
  "-Aclippy::cast_lossless",
  "-Aclippy::cast_possible_truncation",
  "-Aclippy::cast_possible_wrap",
  "-Aclippy::cast_precision_loss",
  "-Aclippy::cast_sign_loss",
  "-Aclippy::cognitive_complexity",
  "-Aclippy::default_numeric_fallback",
  "-Aclippy::doc_markdown",
  "-Aclippy::else_if_without_else",
  "-Aclippy::exhaustive_enums",
  "-Aclippy::exhaustive_structs",
  "-Aclippy::expect_used",
  "-Aclippy::float_arithmetic",
  "-Aclippy::if_not_else",
  "-Aclippy::implicit_hasher",
  "-Aclippy::implicit_return",
  "-Aclippy::inconsistent_digit_grouping",
  "-Aclippy::indexing_slicing",
  "-Aclippy::integer_arithmetic",
  "-Aclippy::integer_division",
  "-Aclippy::iter_nth_zero",
  "-Aclippy::large_digit_groups",
  "-Aclippy::let_underscore_must_use",
  "-Aclippy::match_same_arms",
  "-Aclippy::missing_docs_in_private_items",
  "-Aclippy::missing_errors_doc",
  "-Aclippy::missing_inline_in_public_items",
  "-Aclippy::missing_panics_doc",
  "-Aclippy::mod_module_files",
  "-Aclippy::module_inception",
  "-Aclippy::module_name_repetitions",
  "-Aclippy::must_use_candidate",
  "-Aclippy::new_without_default",
  "-Aclippy::non_ascii_literal",
  "-Aclippy::option_if_let_else",
  "-Aclippy::panic",
  "-Aclippy::panic_in_result_fn",
  "-Aclippy::pattern_type_mismatch",
  "-Aclippy::print_stderr",
  "-Aclippy::print_stdout",
  "-Aclippy::pub-use",
  "-Aclippy::self-named-module-files",
  "-Aclippy::separated_literal_suffix",
  "-Aclippy::shadow_reuse",
  "-Aclippy::shadow_same",
  "-Aclippy::shadow_unrelated",
  "-Aclippy::should_implement_trait",
  "-Aclippy::similar_names",
  "-Aclippy::single_char_lifetime_names",
  "-Aclippy::suboptimal_flops",
  "-Aclippy::too_many_arguments",
  "-Aclippy::too_many_lines",
  "-Aclippy::unnecessary_wraps",
  "-Aclippy::unreachable",
  "-Aclippy::unreadable_literal",
  "-Aclippy::unsafe_derive_deserialize",
  "-Aclippy::unused_self",
  "-Aclippy::unused_unit",
  "-Aclippy::unwrap_in_result",
  "-Aclippy::unwrap_used",
  "-Aclippy::use_debug",
  "-Aclippy::use_self",
  "-Aclippy::useless_transmute",
  "-Aclippy::wildcard_enum_match_arm",
  #
  # Disable some of the default rust checks
  "-Adead_code",
  "-Aelided_lifetimes_in_paths",
  "-Aunused_imports",
  "-Aunused_variables",
  #
  # We'd like to use notation that is closer to scientific
  # and it not always matches snake case convention
  "-Anon-snake-case",
  "-Anon_snake_case",
  #
  # Temporarily allow unimplemented!() macro. Go implement things and remove this!
  "-Aclippy::unimplemented"
]
